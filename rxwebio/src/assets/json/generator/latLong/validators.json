{"rightSidebarLinks":[{"id":"latlong","title":"latLong (Validator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basiclatlongvalidation","title":"Basic latLong Validation","subLink":[]},{"id":"baseconfig","title":"BaseConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completelatlongexample","title":"Complete latLong Example","subLink":[]},{"id":"dynamiclatlongexample","title":"Dynamic latLong Example","subLink":[]},{"id":"githubissues","title":"latLong Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"latLong","description":" latLong validation decorator allows user to enter the input which is valid Latitude or longitude.","validatorType":"Validators","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-latLong-complete\"></div>\r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-latLong-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"latLong-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"latLong-dynamic-latLong\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"latLong-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2>When to use</h2>\r\n\r\n<p>Suppose you want to create a country form, which contains fields like continent, firstCountry, secondCountry and thirdCountry and you want the user to enter input which is a proper Latitude or longitude format. Here depending upon the requirement, these scenarios may arise..</p>\r\n<ol>\r\n  <li>Allow firstCountry which have proper Latitude or longitude format and adding Custom Message on firstCountry.</li>\r\n  <li>Apply latLong validation on secondCountry field based on matched condition in the form, like if the continent is 'Asia', then the secondCountry must be a Latitude or longitude format (Used as a function).</li>\r\n  <li>Apply latLong validation on thirdCountry field based on matched condition in the form, like if the continent is 'Asia', then the thirdCountry must be a Latitude or longitude format (Used as a string datatype).</li>\r\n  <li>Apply latLong validation dynamically based on server rules.</li>\r\n</ol>\r\n<p>Let's see how latLong decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row' id= 'basiclatlongvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic latLong Validation</h2>\r\n\r\n<p>Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p>Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-code\" key=\"latLong-add-component\"></div> \r\n<p>Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"latLong-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-latLong-add\"></div>\r\n</div></div>\r\n<div class='row' id= 'baseconfig'>\r\n<div class='col-lg-12'>\r\n<h2>BaseConfig</h2>\r\n\r\n<p>message and conditionalExpression are not mandatory to use in the <span class='highlighted'>@latLong()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a href=\"#conditionalExpression\" (click)='scrollTo(\"#conditionalExpression\")'  title=\"conditionalExpression\">conditionalExpression</a></td><td>latLong validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a href=\"#message\" (click)='scrollTo(\"#message\")'  title=\"message\">Message</a></td><td>To override the global configuration message and show the custom message on particular control property.</td></tr>\r\n</div></div>\r\n<div class='row' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression</h2>\r\n\r\n<p>Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p>latLong validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p>If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"latLong-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"latLong-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-latLong-conditionalExpression\" title=\"latLong decorators with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>To override the global configuration message and show the custom message on particular control property.</p>\r\n<p>[<div component=\"app-code\" key=\"latLong-messageExample-model\"></div> </p>\r\n<div component=\"app-example-runner\" ref-component=\"app-latLong-message\" title=\"latLong decorators with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row' id= 'completelatlongexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete latLong Example</h2>\r\n\r\n<p>This Complete latLong example which includes all the BaseConfig properties will fulfil the requirement of scenarios 1, 2 and 3</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row' id= 'dynamiclatlongexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic latLong Example</h2>\r\n\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row\">\r\n<div class=\"col-lg-12\">\r\n<app-disqus></app-disqus>\r\n</div>\r\n</div>\r\n"}