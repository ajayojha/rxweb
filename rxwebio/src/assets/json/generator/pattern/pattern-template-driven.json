{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-pattern-complete-template-driven',\r\n    templateUrl: './pattern-complete.component.html'\r\n})\r\nexport class PatternCompleteTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n      <input type=\"text\" name=\"userName\" [(ngModel)]=\"user.userName\"  class=\"form-control\"  [pattern]=\"{'pattern':{'onlyAlpha': RegExp('/^[A-Za-z]+$/')}}\" />\r\n      <small class=\"form-text text-muted\">It checked that username match alpha regex or not<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Contact Number' or 'Age', then you need to add 'userName' input as 'Bharat<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.userName?.errors\">{{userForm.controls.userName?.errors.onlyAlpha.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Zip Code</label>\r\n      <input type=\"text\" name=\"zipCode\" [(ngModel)]=\"user.zipCode\"  class=\"form-control\"  [pattern]=\"{'pattern':{'zipCode':RegExp('^[0-9]{5}(?:-[0-9]{4})?$') },'message':'Zip code should match 12345 or 12345-6789'}\" />\r\n      <small class=\"form-text text-muted\">It checked that zipcode match zipcode regex or not and it shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.zipCode?.errors\">{{userForm.controls.zipCode?.errors.zipCode.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" name=\"age\" [(ngModel)]=\"user.age\"  class=\"form-control\"  [pattern]=\"{'pattern':{'onlyDigit': RegExp('/^[0-9]*$/')},'conditionalExpression':'x => x.userName==\\'Bharat\\''}\" />\r\n      <small class=\"form-text text-muted\">It checked that age match with digit regex or not and it conditionaly applied when userName is Bharat<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.age?.errors\">{{userForm.controls.age?.errors.onlyDigit.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tuserName: string;\r\n\r\n\tzipCode: string;\r\n\r\n\tcontactNumber: number;\r\n\r\n\tage: string;\r\n\r\n}\r\n","json":null},"patternExample":{"notes":null,"component":null,"html":null,"model":"[pattern]=\"{'pattern':{'onlyAlpha': RegExp('/^[A-Za-z]+$/')}}\"","json":null},"pattern":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-pattern-pattern-template-driven',\r\n    templateUrl: './pattern-pattern.component.html'\r\n})\r\nexport class PatternPatternTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n      <input type=\"text\" name=\"userName\" [(ngModel)]=\"user.userName\"  class=\"form-control\"  [pattern]=\"{'pattern':{'onlyAlpha': RegExp('/^[A-Za-z]+$/')}}\" />\r\n      <small class=\"form-text text-muted\">It checked that username match alpha regex or not<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Contact Number' or 'Age', then you need to add 'userName' input as 'Bharat<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.userName?.errors\">{{userForm.controls.userName?.errors.onlyAlpha.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tuserName: string;\r\n\r\n}\r\n","json":null},"patternExamplemessageExample":{"notes":null,"component":null,"html":null,"model":"[pattern]=\"{'pattern':{'zipCode':RegExp('^[0-9]{5}(?:-[0-9]{4})?$') },'message':'Zip code should match 12345 or 12345-6789'}\"","json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-pattern-message-template-driven',\r\n    templateUrl: './pattern-message.component.html'\r\n})\r\nexport class PatternMessageTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Zip Code</label>\r\n      <input type=\"text\" name=\"zipCode\" [(ngModel)]=\"user.zipCode\"  class=\"form-control\"  [pattern]=\"{'pattern':{'zipCode':RegExp('^[0-9]{5}(?:-[0-9]{4})?$') },'message':'Zip code should match 12345 or 12345-6789'}\" />\r\n      <small class=\"form-text text-muted\">It checked that zipcode match zipcode regex or not and it shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.zipCode?.errors\">{{userForm.controls.zipCode?.errors.zipCode.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tzipCode: string;\r\n\r\n}\r\n","json":null},"patternExampleFunction":{"notes":null,"component":null,"html":null,"model":"[pattern]=\"{'pattern':{'onlyDigit': RegExp('/^[0-9]*$/')},'conditionalExpression':(x,y) => x.userName == \\'Bharat\\' }\"","json":null},"patternExampleFunctionconditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"[pattern]=\"{'pattern':{'onlyDigit': RegExp('/^[0-9]*$/')},'conditionalExpression':(x,y) => x.userName == \\'Bharat\\' }\"","json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-pattern-conditionalExpression-template-driven',\r\n    templateUrl: './pattern-conditional-expression.component.html'\r\n})\r\nexport class PatternConditionalExpressionTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n      <input type=\"text\" name=\"userName\" [(ngModel)]=\"user.userName\"  class=\"form-control\"  [pattern]=\"{'pattern':{'onlyAlpha': RegExp('/^[A-Za-z]+$/')}}\" />\r\n      <small class=\"form-text text-muted\">It checked that username match alpha regex or not<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Contact Number' or 'Age', then you need to add 'userName' input as 'Bharat<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.userName?.errors\">{{userForm.controls.userName?.errors.onlyAlpha.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" name=\"age\" [(ngModel)]=\"user.age\"  class=\"form-control\"  [pattern]=\"{'pattern':{'onlyDigit': RegExp('/^[0-9]*$/')},'conditionalExpression':'x => x.userName==\\'Bharat\\''}\" />\r\n      <small class=\"form-text text-muted\">It checked that age match with digit regex or not and it conditionaly applied when userName is Bharat<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.age?.errors\">{{userForm.controls.age?.errors.onlyDigit.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tuserName: string;\r\n\r\n\tage: string;\r\n\r\n\tcontactNumber: number;\r\n\r\n}\r\n","json":null},"patternExampleString":{"notes":null,"component":null,"html":null,"model":"[pattern]=\"{'pattern':{'onlyDigit': RegExp('/^[0-9]*$/')},'conditionalExpression':'x => x.userName==\\'Bharat\\''}\"","json":null},"patternExampleStringconditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"[pattern]=\"{'pattern':{'onlyDigit': RegExp('/^[0-9]*$/')},'conditionalExpression':'x => x.userName==\\'Bharat\\''}\"","json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-pattern-add-template-driven',\r\n    templateUrl: './pattern-add.component.html'\r\n})\r\nexport class PatternAddTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n      <input type=\"text\" name=\"userName\" [(ngModel)]=\"user.userName\"  class=\"form-control\"  [pattern]=\"{'pattern':{'onlyAlpha': RegExp('/^[A-Za-z]+$/')}}\" />\r\n      <small class=\"form-text text-muted\">It checked that username match alpha regex or not<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.userName?.errors\">{{userForm.controls.userName?.errors.onlyAlpha.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tuserName: string;\r\n\r\n}\r\n","json":null}}