{"rightSidebarLinks":[{"id":"pattern","title":"pattern (Validator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicpatternvalidation","title":"Basic Pattern Validation","subLink":[]},{"id":"patternconfig","title":"PatternConfig","subLink":[{"title":"message","id":"message"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"pattern","id":"pattern"}]},{"id":"completepatternexample","title":"Complete pattern Example","subLink":[]},{"id":"dynamicpatternexample","title":"Dynamic pattern Example","subLink":[]},{"id":"githubissues","title":"pattern Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"pattern","description":" Pattern validation decorator will allow user to enter the input which match the predefined pattern value parameter.","validatorType":"Validators","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-pattern-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"pattern-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"pattern-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-pattern-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"pattern-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"pattern-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"pattern-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2>When to use</h2>\r\n\r\n<p>Suppose you want to create a User form, which contains fields like Username, Zipcode, Age and you want the user to enter the input which contains the predefined value. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol>\r\n<li>Allow input which contains only Alphabet in Username.</li>\r\n<li>Apply pattern validation based on matched condition in the form, like if the Username is <span class='highlighted'>John</span>, then only the the pattern validation must be applied to Age value(i.e., Age field must only be a digit).</li>\r\n<li>Adding Custom Message on Zipcode Field.</li>\r\n<li>Apply pattern validation dynamically based on server rules.</li>\r\n</ol>\r\n<p>Letâ€™s see how pattern validator fulfil the need.</p>\r\n</div></div>\r\n<div class='row' id= 'basicpatternvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic Pattern Validation</h2>\r\n\r\n<p>Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p>Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-code\" key=\"pattern-add-component\"></div> \r\n<p>Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"pattern-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-pattern-add\"></div>\r\n</div></div>\r\n<div class='row' id= 'patternconfig'>\r\n<div class='col-lg-12'>\r\n<h2>PatternConfig</h2>\r\n\r\n<p>message,conditionalExpression options are not mandatory to use in the <span class='highlighted'>@pattern()</span> decorator but pattern is mandatory. If required, then user can use these options accordingly:</p>\r\n<table class=\"table table-bordered table-striped\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a href=\"#pattern\" (click)='scrollTo(\"#pattern\")' title=\"pattern\">pattern</a></td><td>enter specific regex pattern </td></tr>\r\n<tr><td><a href=\"#conditionalExpression\" (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>pattern validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a href=\"#message\" (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and show the custom message on particular control property.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>To override the global configuration message and show the custom message on particular control property.</p>\r\n<div component=\"app-code\" key=\"pattern-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-pattern-message\" title=\"pattern decorators with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression</h2>\r\n\r\n<p>Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p>Pattern validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p>If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"pattern-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object. </p></blockquote>\r\n<div component=\"app-code\" key=\"pattern-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-pattern-conditionalExpression\" title=\"pattern decorators with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row' id= 'pattern'>\r\n<div class='col-lg-12'>\r\n<h2>pattern</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>enter specific regex pattern</p>\r\n<div component=\"app-code\" key=\"pattern-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-pattern-message\" title=\"pattern decorators with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row' id= 'completepatternexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete pattern Example</h2>\r\n\r\n<p>This Complete pattern example which includes all the PatternConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row' id= 'dynamicpatternexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic pattern Example</h2>\r\n\r\n<p>This Dynamic pattern example which execute based on json passed. conditional expression with function would be not apply in dynamic pattern example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row\">\r\n<div class=\"col-lg-12\">\r\n<app-disqus></app-disqus>\r\n</div>\r\n</div>\r\n"}