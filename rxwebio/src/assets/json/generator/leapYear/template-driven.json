{"rightSidebarLinks":[{"id":"leapyear","title":"leapYear (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicleapyearvalidation","title":"Basic LeapYear Validation","subLink":[]},{"id":"baseconfig","title":"BaseConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completeleapyearexample","title":"Complete LeapYear Example","subLink":[]},{"id":"dynamicleapyearexample","title":"Dynamic LeapYear Example","subLink":[]},{"id":"githubissues","title":"leapYear Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"leapYear","description":" LeapYear validation decorator will check whether the value entered is a leap year or not.","validatorType":"Template Driven","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-leapYear-complete\"></div>\r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-leapYear-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"leapYear-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"leapYear-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"leapYear-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2>When to use</h2>\r\n\r\n<p>Suppose you want to create a user value form, which contains fields like name, birth year, joining year and you want the user to enter value which is in leap year format Here depending upon the requirement these scenarios may arise..</p>\r\n<ol>\r\n    <li>Allow only leap year in the field of birthyear.</li>\r\n    <li>Apply leapyear validation based on matched condition in the form, like if the name  is ‘John’ then the birthYear value should be leapyear.</li>\r\n    <li>Adding Custom Message on joining Field.</li>\r\n    <li>Apply leapyear validation dynamically based on server rules.</li>\r\n</ol>\r\n<p>Let’s see how LeapYear decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row' id= 'basicleapyearvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic LeapYear Validation</h2>\r\n\r\n<p>Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p>Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-code\" key=\"leapYear-add-component\"></div> \r\n<p>Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"leapYear-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-leapYear-add\"></div>\r\n</div></div>\r\n<div class='row' id= 'baseconfig'>\r\n<div class='col-lg-12'>\r\n<h2>BaseConfig</h2>\r\n\r\n<p>Below options are not mandatory to use in the <span class='highlighted'>@leapYear()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a href=\"#conditionalExpression\" title=\"conditionalExpression\">conditionalExpression</a></td><td>LeapYear validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a href=\"#message\" title=\"message\">message</a></td><td>To override the global configuration message and show the custom message on particular control property.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression</h2>\r\n\r\n<p>Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p>LeapYear validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p>If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"leapYear-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"leapYear-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-leapYear-conditionalExpression\" title=\"leapYear decorators with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>To override the global configuration message and show the custom message on particular control property.</p>\r\n<div component=\"app-code\" key=\"leapYear-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-leapYear-message\" title=\"leapYear decorators with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row' id= 'completeleapyearexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete LeapYear Example</h2>\r\n\r\n<p>This Complete LeapYear example which includes all the BaseConfig properties will fulfil the requirement of scenarios 1, 2, 3 and 4</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row' id= 'dynamicleapyearexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic LeapYear Example</h2>\r\n\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row\">\r\n<div class=\"col-lg-12\">\r\n<app-disqus></app-disqus>\r\n</div>\r\n</div>\r\n"}