{"rightSidebarLinks":[{"id":"alphanumeric","title":"alphaNumeric (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicalphanumericvalidation","title":"Basic AlphaNumeric Validation","subLink":[]},{"id":"alphaconfig","title":"AlphaConfig","subLink":[{"title":"allowWhiteSpace","id":"allowwhitespace"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completealphanumericexample","title":"Complete AlphaNumeric Example","subLink":[]},{"id":"dynamicalphanumericexample","title":"Dynamic AlphaNumeric Example","subLink":[]},{"id":"githubissues","title":"alphaNumeric Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"alphaNumeric","description":" Alpha Numeric validation decorator will allow only alphabets and numbers to be entered, It will not allow any special character. ","validatorType":"Template Driven","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-alphaNumeric-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumeric-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumeric-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-alphaNumeric-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumeric-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumeric-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"alphaNumeric-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2>When to use</h2>\r\n\r\n<p>Suppose you want to create a Location form, which contains fields like AreaName, FlatAddress, PostalAddress, CityCode and you want the user to enter only alphabets and numbers. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol>\r\n    <li>Allow only alphabets and numbers in AreaName without space.</li>\r\n    <li>Allowing WhiteSpace in FlatAddress.</li>\r\n    <li>Apply alphaNumeric validation based on matched condition in the form, like if the AreaName is <span class='highlighted'>Boston</span> then the CityCode value should be in alphabets and numbers.</li>\r\n    <li>Adding Custom Message on PostalAddress Field.</li>\r\n    <li>Apply alphaNumeric validation dynamically based on server rules. </li>\r\n</ol>\r\n<p>Letâ€™s see how alphaNumeric decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row' id= 'basicalphanumericvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic AlphaNumeric Validation</h2>\r\n\r\n<p>Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p>Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-code\" key=\"alphaNumeric-add-component\"></div> \r\n<p>Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"alphaNumeric-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumeric-add\"></div>\r\n</div></div>\r\n<div class='row' id= 'alphaconfig'>\r\n<div class='col-lg-12'>\r\n<h2>AlphaConfig</h2>\r\n\r\n<p>Below options are not mandatory to use in the <span class='highlighted'>@alphaNumeric()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a href=\"#allowwhitespace\" (click)='scrollTo(\"#allowwhitespace\")' title=\"allowWhiteSpace\">allowWhiteSpace</a></td><td>This will allow whitespace in particular control property. The default value is <span class='highlighted'>false</span>.</td></tr>\r\n<tr><td><a href=\"#conditionalExpression\" (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>AlphaNumeric validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a href=\"#message\" (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and show the custom message on particular control property.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row' id= 'allowwhitespace'>\r\n<div class='col-lg-12'>\r\n<h2>allowWhiteSpace</h2>\r\n\r\n<p>Type :  <span class='highlighted'>boolean</span> </p>\r\n<p>This will allow whitespace in particular control property.The default value is <span class='highlighted'>false</span>.</p>\r\n<div component=\"app-code\" key=\"alphaNumeric-allowWhiteSpaceExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumeric-allowWhiteSpace\" title=\"AlphaNumeric decorators with allowWhiteSpace\" key=\"allowWhiteSpace\"></div>\r\n</div></div>\r\n<div class='row' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression</h2>\r\n\r\n<p>Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p>AlphaNumeric validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p>If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"alphaNumeric-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"alphaNumeric-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumeric-conditionalExpression\" title=\"AlphaNumeric decorators with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>To override the global configuration message and show the custom message on particular control property.</p>\r\n<div component=\"app-code\" key=\"alphaNumeric-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-alphaNumeric-message\" title=\"AlphaNumeric decorators with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row' id= 'completealphanumericexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete AlphaNumeric Example</h2>\r\n\r\n<p>This Complete AlphaNumeric example which includes all the AlphaConfig properties will fulfil the requirement of scenarios 1, 2, 3 and 4.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row' id= 'dynamicalphanumericexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic AlphaNumeric Example</h2>\r\n\r\n<p>This Dynamic AlphaNumeric example which execute based on json passed. conditional expression with function would be not apply in dynamic AlphaNumeric example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row\">\r\n<div class=\"col-lg-12\">\r\n<app-disqus></app-disqus>\r\n</div>\r\n</div>\r\n"}