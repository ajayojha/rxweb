{"rightSidebarLinks":[{"id":"compare","title":"compare (Validator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basiccomparevalidation","title":"Basic Compare Validation","subLink":[]},{"id":"compareconfig","title":"CompareConfig","subLink":[{"title":"fieldName","id":"fieldname"},{"title":"message","id":"message"}]},{"id":"completecompareexample","title":"Complete Compare Example","subLink":[]},{"id":"dynamiccompareexample","title":"Dynamic Compare Example","subLink":[]},{"id":"githubissues","title":"compare Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"compare","description":" Compare validation decorator will compare two inputs whether they are same or not.","validatorType":"Validators","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-compare-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"compare-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"compare-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-compare-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"compare-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"compare-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"compare-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2>When to use</h2>\r\n\r\n<p>Suppose you want to create a user form in which you want to compare passwords which are entered by the user which contains fields like Password and Confirm Password Here depending upon the requirement these scenarios may arise.</p>\r\n<ol>\r\n\t<li>The Name of Password field on which comparison is done.</li>\r\n    <li>The Custom Message on ConfirmPassword field.</li>  \r\n    <li>Apply compare validation dynamically based on server rules.</li>\r\n</ol>\r\n<p>Letâ€™s see how compare validator fulfil the need.</p>\r\n</div></div>\r\n<div class='row' id= 'basiccomparevalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic Compare Validation</h2>\r\n\r\n<p>Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p>Here we have covered Add form operation.</p>\r\n<div component=\"app-code\" key=\"compare-add-component\"></div> \r\n<p>Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"compare-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-compare-add\"></div>\r\n</div></div>\r\n<div class='row' id= 'compareconfig'>\r\n<div class='col-lg-12'>\r\n<h2>CompareConfig</h2>\r\n\r\n<p>Below options are not mandatory to use in the <span class='highlighted'>@compare()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a href=\"#fieldName\"  (click)='scrollTo(\"#fieldName\")'  title=\"fieldName\">FieldName</a></td><td>Current property is matched with the particular property. so we need to pass particular property name.</td></tr>\r\n<tr><td><a href=\"#message\"  (click)='scrollTo(\"#message\")' title=\"message\">Message</a></td><td>To override the global configuration message and show the custom message on particular control property.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row' id= 'fieldname'>\r\n<div class='col-lg-12'>\r\n<h2>fieldName</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>Current property is matched with the particular property. so we need to pass particular property name.</p>\r\n<div component=\"app-code\" key=\"compare-fieldNameExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-compare-fieldName\" title=\"fieldName decorators with fieldName\" key=\"fieldName\"></div>\r\n</div></div>\r\n<div class='row' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>To override the global configuration message and show the custom message on particular control property.</p>\r\n<div component=\"app-code\" key=\"compare-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-compare-message\" title=\"compare decorators with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row' id= 'completecompareexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete Compare Example</h2>\r\n\r\n<p>This Complete Compare example which includes all the CompareConfig properties will fulfil the requirement of scenarios 1 and 2.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row' id= 'dynamiccompareexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic Compare Example</h2>\r\n\r\n<p>This Dynamic Compare example which execute based on json passed. conditional expression with function would be not apply in dynamic Compare example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row\">\r\n<div class=\"col-lg-12\">\r\n<app-disqus></app-disqus>\r\n</div>\r\n</div>\r\n"}