{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AddressInfo } from './address-info.model';\r\n\r\n@Component({\r\n    selector: 'app-alpha-complete-template-driven',\r\n    templateUrl: './alpha-complete.component.html'\r\n})\r\nexport class AlphaCompleteTemplateDrivenComponent implements OnInit {\r\n    addressinfo: AddressInfo\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.addressinfo= new AddressInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #addressinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" name=\"countryName\" [(ngModel)]=\"addressinfo.countryName\"  class=\"form-control\"  alpha />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Country Code' or 'City' then you need to add this input as 'India'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls.countryName?.errors\">{{addressinfoForm.controls.countryName?.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>City</label>\r\n      <input type=\"text\" name=\"cityName\" [(ngModel)]=\"addressinfo.cityName\"  class=\"form-control\"  [alpha]=\"{'conditionalExpression':'x => x.countryName ==\\'India\\''}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'City' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls.cityName?.errors\">{{addressinfoForm.controls.cityName?.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>State Name</label>\r\n      <input type=\"text\" name=\"stateName\" [(ngModel)]=\"addressinfo.stateName\"  class=\"form-control\"  [alpha]=\"{'allowWhiteSpace':true}\" />\r\n      <small class=\"form-text text-muted\">This allowed whitespace in alpha validation<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls.stateName?.errors\">{{addressinfoForm.controls.stateName?.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>State Code</label>\r\n      <input type=\"text\" name=\"stateCode\" [(ngModel)]=\"addressinfo.stateCode\"  class=\"form-control\"  [alpha]=\"{'message':'You can enter only alphabets.'}\" />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls.stateCode?.errors\">{{addressinfoForm.controls.stateCode?.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!addressinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class AddressInfo {\r\n\r\n\tcountryName: string;\r\n\r\n\tcountryCode: string;\r\n\r\n\tcityName: string;\r\n\r\n\tstateName: string;\r\n\r\n\tstateCode: string;\r\n\r\n}\r\n","json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"[alpha]=\"{'conditionalExpression':(x,y) => x.countryName == \\'India\\'}\"","json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AddressInfo } from './address-info.model';\r\n\r\n@Component({\r\n    selector: 'app-alpha-conditionalExpression-template-driven',\r\n    templateUrl: './alpha-conditional-expression.component.html'\r\n})\r\nexport class AlphaConditionalExpressionTemplateDrivenComponent implements OnInit {\r\n    addressinfo: AddressInfo\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.addressinfo= new AddressInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #addressinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" name=\"countryName\" [(ngModel)]=\"addressinfo.countryName\"  class=\"form-control\"  alpha />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Country Code' or 'City' then you need to add this input as 'India'.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls.countryName?.errors\">{{addressinfoForm.controls.countryName?.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>City</label>\r\n      <input type=\"text\" name=\"cityName\" [(ngModel)]=\"addressinfo.cityName\"  class=\"form-control\"  [alpha]=\"{'conditionalExpression':'x => x.countryName ==\\'India\\''}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'City' then you need to add 'Country Name' input as 'India'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls.cityName?.errors\">{{addressinfoForm.controls.cityName?.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!addressinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class AddressInfo {\r\n\r\n\tcountryName: string;\r\n\r\n\tcityName: string;\r\n\r\n\tcountryCode: string;\r\n\r\n}\r\n","json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"[alpha]=\"{'conditionalExpression':'x => x.countryName ==\\'India\\''}\"","json":null},"allowWhiteSpaceExample":{"notes":null,"component":null,"html":null,"model":"[alpha]=\"{'allowWhiteSpace':true}\"","json":null},"allowWhiteSpace":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AddressInfo } from './address-info.model';\r\n\r\n@Component({\r\n    selector: 'app-alpha-allowWhiteSpace-template-driven',\r\n    templateUrl: './alpha-allow-white-space.component.html'\r\n})\r\nexport class AlphaAllowWhiteSpaceTemplateDrivenComponent implements OnInit {\r\n    addressinfo: AddressInfo\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.addressinfo= new AddressInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #addressinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>State Name</label>\r\n      <input type=\"text\" name=\"stateName\" [(ngModel)]=\"addressinfo.stateName\"  class=\"form-control\"  [alpha]=\"{'allowWhiteSpace':true}\" />\r\n      <small class=\"form-text text-muted\">This allowed whitespace in alpha validation<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls.stateName?.errors\">{{addressinfoForm.controls.stateName?.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!addressinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class AddressInfo {\r\n\r\n\tstateName: string;\r\n\r\n}\r\n","json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"[alpha]=\"{'message':'You can enter only alphabets.'}\"","json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { AddressInfo } from './address-info.model';\r\n\r\n@Component({\r\n    selector: 'app-alpha-message-template-driven',\r\n    templateUrl: './alpha-message.component.html'\r\n})\r\nexport class AlphaMessageTemplateDrivenComponent implements OnInit {\r\n    addressinfo: AddressInfo\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.addressinfo= new AddressInfo()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #addressinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>State Code</label>\r\n      <input type=\"text\" name=\"stateCode\" [(ngModel)]=\"addressinfo.stateCode\"  class=\"form-control\"  [alpha]=\"{'message':'You can enter only alphabets.'}\" />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"addressinfoForm.controls.stateCode?.errors\">{{addressinfoForm.controls.stateCode?.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!addressinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class AddressInfo {\r\n\r\n\tstateCode: string;\r\n\r\n}\r\n","json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component({\r\n    selector: 'app-alpha-add-template-driven',\r\n    templateUrl: './alpha-add.component.html'\r\n})\r\nexport class AlphaAddTemplateDrivenComponent implements OnInit {\r\n    country: Country\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.country= new Country()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #countryForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" name=\"countryName\" [(ngModel)]=\"country.countryName\"  class=\"form-control\"  alpha />\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.countryName?.errors\">{{countryForm.controls.countryName?.errors.alpha.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!countryForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class Country {\r\n\r\n\tcountryName: string;\r\n\r\n}\r\n","json":null}}