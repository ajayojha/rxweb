{"complete":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { StorageCapacity } from './storage-capacity.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-complete',\r\n    templateUrl: './file-size-complete.component.html'\r\n})\r\nexport class FileSizeCompleteComponent implements OnInit {\r\n    storageCapacityFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let storageCapacity = new StorageCapacity();\r\n        this.storageCapacityFormGroup = this.formBuilder.formGroup(storageCapacity);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"storageCapacityFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Device</label>\r\n      <input type=\"text\" formControlName=\"device\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' or 'Photograph Storage Size', then you need to add 'Device' input as 'SmartPhone'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.device.errors\">{{storageCapacityFormGroup.controls.device.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Document Storage Size</label>\r\n      <input type=\"text\" formControlName=\"documentStorageSize\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.documentStorageSize.errors\">{{storageCapacityFormGroup.controls.documentStorageSize.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Photograph Storage Size</label>\r\n      <input type=\"text\" formControlName=\"photographStorageSize\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.photographStorageSize.errors\">{{storageCapacityFormGroup.controls.photographStorageSize.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Video Storage Size</label>\r\n      <input type=\"text\" formControlName=\"videoStorageSize\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter upto 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.videoStorageSize.errors\">{{storageCapacityFormGroup.controls.videoStorageSize.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!storageCapacityFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class StorageCapacity {\r\n\r\n\t@prop()\r\n\tdevice: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@fileSize({maxSize:50  ,conditionalExpression:(x,y) => x.device == \"SmartPhone\"  }) \r\n\tdocumentStorageSize: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@fileSize({maxSize:50  ,conditionalExpression:'x => x.device ==\"SmartPhone\"' }) \r\n\tphotographStorageSize: string;\r\n\r\n\t@fileSize({maxSize:50  ,message:'{{0}} is not a valid size' }) \r\n\tvideoStorageSize: string;\r\n\r\n}\r\n","json":null},"maxSizeExampleFunction":{"notes":null,"component":null,"html":null,"model":"\t@fileSize({maxSize:50  ,conditionalExpression:(x,y) => x.device == \"SmartPhone\"  }) \r\ndocumentStorageSize: string;\r\n","json":null},"maxSize":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { StorageCapacity } from './storage-capacity.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-maxSize',\r\n    templateUrl: './file-size-max-size.component.html'\r\n})\r\nexport class FileSizeMaxSizeComponent implements OnInit {\r\n    storageCapacityFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let storageCapacity = new StorageCapacity();\r\n        this.storageCapacityFormGroup = this.formBuilder.formGroup(storageCapacity);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"storageCapacityFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Device</label>\r\n      <input type=\"text\" formControlName=\"device\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' or 'Photograph Storage Size', then you need to add 'Device' input as 'SmartPhone'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.device.errors\">{{storageCapacityFormGroup.controls.device.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Photograph Storage Size</label>\r\n      <input type=\"text\" formControlName=\"photographStorageSize\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.photographStorageSize.errors\">{{storageCapacityFormGroup.controls.photographStorageSize.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Document Storage Size</label>\r\n      <input type=\"text\" formControlName=\"documentStorageSize\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.documentStorageSize.errors\">{{storageCapacityFormGroup.controls.documentStorageSize.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!storageCapacityFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class StorageCapacity {\r\n\r\n\t@prop()\r\n\tdevice: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@fileSize({maxSize:50  ,conditionalExpression:'x => x.device ==\"SmartPhone\"' }) \r\n\tphotographStorageSize: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@fileSize({maxSize:50  ,conditionalExpression:(x,y) => x.device == \"SmartPhone\"  }) \r\n\tdocumentStorageSize: string;\r\n\r\n}\r\n","json":null},"maxSizeExampleFunctionconditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"\t@fileSize({maxSize:50  ,conditionalExpression:(x,y) => x.device == \"SmartPhone\"  }) \r\ndocumentStorageSize: string;\r\n","json":null},"conditionalExpression":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { StorageCapacity } from './storage-capacity.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-conditionalExpression',\r\n    templateUrl: './file-size-conditional-expression.component.html'\r\n})\r\nexport class FileSizeConditionalExpressionComponent implements OnInit {\r\n    storageCapacityFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let storageCapacity = new StorageCapacity();\r\n        this.storageCapacityFormGroup = this.formBuilder.formGroup(storageCapacity);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"storageCapacityFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Device</label>\r\n      <input type=\"text\" formControlName=\"device\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' or 'Photograph Storage Size', then you need to add 'Device' input as 'SmartPhone'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.device.errors\">{{storageCapacityFormGroup.controls.device.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Photograph Storage Size</label>\r\n      <input type=\"text\" formControlName=\"photographStorageSize\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.photographStorageSize.errors\">{{storageCapacityFormGroup.controls.photographStorageSize.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Document Storage Size</label>\r\n      <input type=\"text\" formControlName=\"documentStorageSize\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.documentStorageSize.errors\">{{storageCapacityFormGroup.controls.documentStorageSize.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!storageCapacityFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class StorageCapacity {\r\n\r\n\t@prop()\r\n\tdevice: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@fileSize({maxSize:50  ,conditionalExpression:'x => x.device ==\"SmartPhone\"' }) \r\n\tphotographStorageSize: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@fileSize({maxSize:50  ,conditionalExpression:(x,y) => x.device == \"SmartPhone\"  }) \r\n\tdocumentStorageSize: string;\r\n\r\n}\r\n","json":null},"maxSizeExampleString":{"notes":null,"component":null,"html":null,"model":"\t@fileSize({maxSize:50  ,conditionalExpression:'x => x.device ==\"SmartPhone\"' }) \r\nphotographStorageSize: string;\r\n","json":null},"maxSizeExampleStringconditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"\t@fileSize({maxSize:50  ,conditionalExpression:'x => x.device ==\"SmartPhone\"' }) \r\nphotographStorageSize: string;\r\n","json":null},"maxSizeExample":{"notes":null,"component":null,"html":null,"model":"\t@fileSize({maxSize:50  ,message:'{{0}} is not a valid size' }) \r\nvideoStorageSize: string;\r\n","json":null},"maxSizeExamplemessageExample":{"notes":null,"component":null,"html":null,"model":"\t@fileSize({maxSize:50  ,message:'{{0}} is not a valid size' }) \r\nvideoStorageSize: string;\r\n","json":null},"message":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { StorageCapacity } from './storage-capacity.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-message',\r\n    templateUrl: './file-size-message.component.html'\r\n})\r\nexport class FileSizeMessageComponent implements OnInit {\r\n    storageCapacityFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let storageCapacity = new StorageCapacity();\r\n        this.storageCapacityFormGroup = this.formBuilder.formGroup(storageCapacity);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"storageCapacityFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Video Storage Size</label>\r\n      <input type=\"text\" formControlName=\"videoStorageSize\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter upto 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.videoStorageSize.errors\">{{storageCapacityFormGroup.controls.videoStorageSize.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!storageCapacityFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class StorageCapacity {\r\n\r\n\t@fileSize({maxSize:50  ,message:'{{0}} is not a valid size' }) \r\n\tvideoStorageSize: string;\r\n\r\n}\r\n","json":null},"dynamic":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { StorageCapacity } from './storage-capacity.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-dynamic',\r\n    templateUrl: './file-size-dynamic.component.html'\r\n})\r\nexport class FileSizeDynamicComponent implements OnInit {\r\n    storageCapacityFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let storageCapacity = new StorageCapacity();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/fileSize/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.storageCapacityFormGroup = this.formBuilder.formGroup(storageCapacity,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"storageCapacityFormGroup\"  [formGroup]=\"storageCapacityFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Device</label>\r\n      <input type=\"text\" formControlName=\"device\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' or 'Photograph Storage Size', then you need to add 'Device' input as 'SmartPhone'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.device.errors\">{{storageCapacityFormGroup.controls.device.errors.fileSize.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Photograph Storage Size</label>\r\n      <input type=\"text\" formControlName=\"photographStorageSize\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.photographStorageSize.errors\">{{storageCapacityFormGroup.controls.photographStorageSize.errors.fileSize.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Video Storage Size</label>\r\n      <input type=\"text\" formControlName=\"videoStorageSize\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter upto 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.videoStorageSize.errors\">{{storageCapacityFormGroup.controls.videoStorageSize.errors.fileSize.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!storageCapacityFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class StorageCapacity {\r\n\r\n\t@prop()\r\n\tdevice: string;\r\n\r\n\t@prop()\r\n\tphotographStorageSize: string;\r\n\r\n\t@prop()\r\n\tvideoStorageSize: string;\r\n\r\n}\r\n","json":"{\"device\":{\"fileSize\":true},\"photographStorageSize\":{\"maxSize\":\"50\",\"conditionalExpression\":\"'x => x.device ==\\\"SmartPhone\\\"'\"},\"videoStorageSize\":{\"maxSize\":\"50\",\"message\":\"'{{0}} is not a valid size'\"}}"},"add":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { StorageCapacity } from './storage-capacity.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-add',\r\n    templateUrl: './file-size-add.component.html'\r\n})\r\nexport class FileSizeAddComponent implements OnInit {\r\n    storageCapacityFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let storageCapacity = new StorageCapacity();\r\n        this.storageCapacityFormGroup = this.formBuilder.formGroup(storageCapacity);\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  [formGroup]=\"storageCapacityFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Video Storage Size</label>\r\n      <input type=\"text\" formControlName=\"videoStorageSize\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You must enter a valid size<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.videoStorageSize.errors\">{{storageCapacityFormGroup.controls.videoStorageSize.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!storageCapacityFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class StorageCapacity {\r\n\r\n\t@fileSize({maxSize:50 }) \r\n\tvideoStorageSize: string;\r\n\r\n}\r\n","json":null},"edit":{"notes":null,"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { StorageCapacity } from './storage-capacity.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-edit',\r\n    templateUrl: './file-size-edit.component.html'\r\n})\r\nexport class FileSizeEditComponent implements OnInit {\r\n    storageCapacityFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/fileSize/edit/storage-capacity-data.json').subscribe(storageCapacity => {\r\n            this.storageCapacityFormGroup = this.formBuilder.formGroup<StorageCapacity>(StorageCapacity,storageCapacity);\r\n        })\r\n    }\r\n}\r\n","html":"<div>\r\n  <form  *ngIf=\"storageCapacityFormGroup\"  [formGroup]=\"storageCapacityFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Video Storage Size</label>\r\n      <input type=\"text\" formControlName=\"videoStorageSize\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You must enter a valid size<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"storageCapacityFormGroup.controls.videoStorageSize.errors\">{{storageCapacityFormGroup.controls.videoStorageSize.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!storageCapacityFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"import {  fileSize,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class StorageCapacity {\r\n\r\n\t@fileSize({maxSize:50 }) \r\n\tvideoStorageSize: string;\r\n\r\n}\r\n","json":"{\"videoStorageSize\":\"10\"}"}}