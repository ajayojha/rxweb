{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { StorageCapacity } from './storage-capacity.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-complete-template-driven',\r\n    templateUrl: './file-size-complete.component.html'\r\n})\r\nexport class FileSizeCompleteTemplateDrivenComponent implements OnInit {\r\n    storagecapacity: StorageCapacity\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.storagecapacity= new StorageCapacity()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #storagecapacityForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Device</label>\r\n      <input type=\"text\" name=\"device\" [(ngModel)]=\"storagecapacity.device\"  class=\"form-control\"  fileSize />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' or 'Photograph Storage Size', then you need to add 'Device' input as 'SmartPhone'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"storagecapacityForm.controls.device?.errors\">{{storagecapacityForm.controls.device?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Photograph Storage Size</label>\r\n      <input type=\"text\" name=\"photographStorageSize\" [(ngModel)]=\"storagecapacity.photographStorageSize\"  class=\"form-control\"  [fileSize]=\"{'maxSize':50,'conditionalExpression':'x => x.device ==\\'SmartPhone\\''}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"storagecapacityForm.controls.photographStorageSize?.errors\">{{storagecapacityForm.controls.photographStorageSize?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Video Storage Size</label>\r\n      <input type=\"text\" name=\"videoStorageSize\" [(ngModel)]=\"storagecapacity.videoStorageSize\"  class=\"form-control\"  [fileSize]=\"{'maxSize':50,'message':'Video Storage Size is not a valid size'}\" />\r\n      <small class=\"form-text text-muted\">you can enter upto 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"storagecapacityForm.controls.videoStorageSize?.errors\">{{storagecapacityForm.controls.videoStorageSize?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!storagecapacityForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class StorageCapacity {\r\n\r\n\tdevice: string;\r\n\r\n\tdocumentStorageSize: string;\r\n\r\n\tphotographStorageSize: string;\r\n\r\n\tvideoStorageSize: string;\r\n\r\n}\r\n","json":null},"maxSizeExampleFunction":{"notes":null,"component":null,"html":null,"model":"[fileSize]=\"{'maxSize':50,'conditionalExpression':(x,y) => x.device == \\'SmartPhone\\' }\"","json":null},"maxSize":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { StorageCapacity } from './storage-capacity.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-maxSize-template-driven',\r\n    templateUrl: './file-size-max-size.component.html'\r\n})\r\nexport class FileSizeMaxSizeTemplateDrivenComponent implements OnInit {\r\n    storagecapacity: StorageCapacity\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.storagecapacity= new StorageCapacity()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #storagecapacityForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Device</label>\r\n      <input type=\"text\" name=\"device\" [(ngModel)]=\"storagecapacity.device\"  class=\"form-control\"  fileSize />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' or 'Photograph Storage Size', then you need to add 'Device' input as 'SmartPhone'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"storagecapacityForm.controls.device?.errors\">{{storagecapacityForm.controls.device?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Photograph Storage Size</label>\r\n      <input type=\"text\" name=\"photographStorageSize\" [(ngModel)]=\"storagecapacity.photographStorageSize\"  class=\"form-control\"  [fileSize]=\"{'maxSize':50,'conditionalExpression':'x => x.device ==\\'SmartPhone\\''}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"storagecapacityForm.controls.photographStorageSize?.errors\">{{storagecapacityForm.controls.photographStorageSize?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!storagecapacityForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class StorageCapacity {\r\n\r\n\tdevice: string;\r\n\r\n\tphotographStorageSize: string;\r\n\r\n\tdocumentStorageSize: string;\r\n\r\n}\r\n","json":null},"maxSizeExampleFunctionconditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"[fileSize]=\"{'maxSize':50,'conditionalExpression':(x,y) => x.device == \\'SmartPhone\\' }\"","json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { StorageCapacity } from './storage-capacity.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-conditionalExpression-template-driven',\r\n    templateUrl: './file-size-conditional-expression.component.html'\r\n})\r\nexport class FileSizeConditionalExpressionTemplateDrivenComponent implements OnInit {\r\n    storagecapacity: StorageCapacity\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.storagecapacity= new StorageCapacity()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #storagecapacityForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Device</label>\r\n      <input type=\"text\" name=\"device\" [(ngModel)]=\"storagecapacity.device\"  class=\"form-control\"  fileSize />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Document Storage Size' or 'Photograph Storage Size', then you need to add 'Device' input as 'SmartPhone'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"storagecapacityForm.controls.device?.errors\">{{storagecapacityForm.controls.device?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Photograph Storage Size</label>\r\n      <input type=\"text\" name=\"photographStorageSize\" [(ngModel)]=\"storagecapacity.photographStorageSize\"  class=\"form-control\"  [fileSize]=\"{'maxSize':50,'conditionalExpression':'x => x.device ==\\'SmartPhone\\''}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Photograph Storage Size' then you need to add 'Device' input as 'SmartPhone'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"storagecapacityForm.controls.photographStorageSize?.errors\">{{storagecapacityForm.controls.photographStorageSize?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!storagecapacityForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class StorageCapacity {\r\n\r\n\tdevice: string;\r\n\r\n\tphotographStorageSize: string;\r\n\r\n\tdocumentStorageSize: string;\r\n\r\n}\r\n","json":null},"maxSizeExampleString":{"notes":null,"component":null,"html":null,"model":"[fileSize]=\"{'maxSize':50,'conditionalExpression':'x => x.device ==\\'SmartPhone\\''}\"","json":null},"maxSizeExampleStringconditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"[fileSize]=\"{'maxSize':50,'conditionalExpression':'x => x.device ==\\'SmartPhone\\''}\"","json":null},"maxSizeExample":{"notes":null,"component":null,"html":null,"model":"[fileSize]=\"{'maxSize':50,'message':'{{0}} is not a valid size'}\"","json":null},"maxSizeExamplemessageExample":{"notes":null,"component":null,"html":null,"model":"[fileSize]=\"{'maxSize':50,'message':'{{0}} is not a valid size'}\"","json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { StorageCapacity } from './storage-capacity.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-message-template-driven',\r\n    templateUrl: './file-size-message.component.html'\r\n})\r\nexport class FileSizeMessageTemplateDrivenComponent implements OnInit {\r\n    storagecapacity: StorageCapacity\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.storagecapacity= new StorageCapacity()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #storagecapacityForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Video Storage Size</label>\r\n      <input type=\"text\" name=\"videoStorageSize\" [(ngModel)]=\"storagecapacity.videoStorageSize\"  class=\"form-control\"  [fileSize]=\"{'maxSize':50,'message':'Video Storage Size is not a valid size'}\" />\r\n      <small class=\"form-text text-muted\">you can enter upto 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"storagecapacityForm.controls.videoStorageSize?.errors\">{{storagecapacityForm.controls.videoStorageSize?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!storagecapacityForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class StorageCapacity {\r\n\r\n\tvideoStorageSize: string;\r\n\r\n}\r\n","json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { StorageCapacity } from './storage-capacity.model';\r\n\r\n@Component({\r\n    selector: 'app-fileSize-add-template-driven',\r\n    templateUrl: './file-size-add.component.html'\r\n})\r\nexport class FileSizeAddTemplateDrivenComponent implements OnInit {\r\n    storagecapacity: StorageCapacity\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.storagecapacity= new StorageCapacity()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #storagecapacityForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Video Storage Size</label>\r\n      <input type=\"text\" name=\"videoStorageSize\" [(ngModel)]=\"storagecapacity.videoStorageSize\"  class=\"form-control\"  [fileSize]=\"{'maxSize':50}\" />\r\n      <small class=\"form-text text-muted\">You must enter a valid size<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"storagecapacityForm.controls.videoStorageSize?.errors\">{{storagecapacityForm.controls.videoStorageSize?.errors.fileSize.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!storagecapacityForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class StorageCapacity {\r\n\r\n\tvideoStorageSize: string;\r\n\r\n}\r\n","json":null}}