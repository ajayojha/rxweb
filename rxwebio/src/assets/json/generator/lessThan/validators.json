{"rightSidebarLinks":[{"id":"lessthan","title":"lessThan (Validator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basiclessthanvalidation","title":"Basic LessThan Validation","subLink":[]},{"id":"relationaloperatorconfig","title":"RelationalOperatorConfig","subLink":[{"title":"fieldName","id":"fieldname"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completelessthanexample","title":"Complete lessThan Example","subLink":[]},{"id":"dynamiclessthanexample","title":"Dynamic lessThan Example","subLink":[]},{"id":"githubissues","title":"lessThan Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"lessThan","description":" Less than validation decorator will allow the user to enter only that value which is less than the value in the pre defined field.","validatorType":"Validators","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-lessThan-complete\"></div>\r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-lessThan-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lessThan-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lessThan-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lessThan-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2>When to use</h2>\r\n\r\n<p>Suppose you want to create a User form, which contains fields like ObtainedMarks, PassingMarks, OtherMarks and you want the user to enter the numbers which are less than a related field. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol>\r\n    <li>Allow numbers which are less than a perticular field like in PassingMarks.</li>\r\n    <li>Apply lessThan validation based on matched condition in the form, like if the ObtainedMarks is less than 35, then only the greater than validation will be applied to PassingMarks field.</li>\r\n    <li>Adding Custom Message on OtherMarks Field.</li>\r\n    <li>Apply lessThan validation dynamically based on server rules.</li>\r\n</ol>\r\n<p>Letâ€™s see how lessThan decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row' id= 'basiclessthanvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic LessThan Validation</h2>\r\n\r\n<p>Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p>Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-code\" key=\"lessThan-add-component\"></div> \r\n<p>Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"lessThan-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-lessThan-add\"></div>\r\n</div></div>\r\n<div class='row' id= 'relationaloperatorconfig'>\r\n<div class='col-lg-12'>\r\n<h2>RelationalOperatorConfig</h2>\r\n\r\n<p>message and conditionalExpression options are not mandatory but fieldName is mandatory to use in the <span class='highlighted'>@lessThan()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a href=\"#fieldName\" title=\"fieldName\">fieldName</a></td><td>Less than validation should be applied based on the <span class='highlighted'>fieldName</span> for compare other field value</td></tr>\r\n<tr><td><a href=\"#conditionalExpression\" title=\"conditionalExpression\">conditionalExpression</a></td><td>Less than validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a href=\"#message\" title=\"message\">message</a></td><td>To override the global configuration message and show the custom message on particular control property.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row' id= 'fieldname'>\r\n<div class='col-lg-12'>\r\n<h2>fieldName</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>Less than validation should be applied based on the <span class='highlighted'>fieldName</span> for compare other field value</p>\r\n<div component=\"app-code\" key=\"lessThan-fieldNameExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-lessThan-fieldName\" title=\"lessThan decorators with fieldName\" key=\"fieldName\"></div>\r\n</div></div>\r\n<div class='row' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression</h2>\r\n\r\n<p>Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p>Less than validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p>If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"lessThan-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"lessThan-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-lessThan-conditionalExpression\" title=\"lessThan decorators with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>To override the global configuration message and show the custom message on particular control property.</p>\r\n<div component=\"app-code\" key=\"lessThan-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-lessThan-message\" title=\"lessThan decorators with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row' id= 'completelessthanexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete lessThan Example</h2>\r\n\r\n<p>This Complete lessThan example which includes all the RelationalOperatorConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row' id= 'dynamiclessthanexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic lessThan Example</h2>\r\n\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row\">\r\n<div class=\"col-lg-12\">\r\n<app-disqus></app-disqus>\r\n</div>\r\n</div>\r\n"}