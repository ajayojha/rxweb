{"rightSidebarLinks":[{"id":"contains","title":"contains (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basiccontainsvalidation","title":"Basic Contains Validation","subLink":[]},{"id":"containsconfig","title":"ContainsConfig","subLink":[{"title":"value","id":"value"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completecontainsexample","title":"Complete Contains Example","subLink":[]},{"id":"dynamiccontainsexample","title":"Dynamic Contains Example","subLink":[]},{"id":"githubissues","title":"contains Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"contains","description":" Contains validation decorator will check that value is in the input, It will not allow to enter input that not contains the predefined value.","validatorType":"Template Driven","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-contains-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"contains-complete-component\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-contains-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"contains-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"contains-dynamic-json\"></div>\r\n"}]},"innerHtml":null,"htmlContent":"<div class='row' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2>When to use</h2>\r\n\r\n<p>Suppose you want to create a User form, which contains fields like EmailAddress, RecoveryEmailAddress, OtherEmailAddress and you want the user to enter the input which contains the predefined value. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol>\r\n\t<li>Allow input which contains the predefined value in EmailAddress.</li>\r\n\t<li>Apply contains validation based on matched condition in the form, like if the EmailAddress is <span class='highlighted'>abc@gmail.com</span>, then only the the       contains validation must be applied to RecoveryEmailAddress value.</li>\r\n\t<li>Adding Custom Message on OtherEmailAddress Field.</li>\r\n\t<li>Apply contains validation dynamically based on server rules.</li>\r\n</ol>\r\n<p>Letâ€™s see how contains validator fulfil the need.</p>\r\n</div></div>\r\n<div class='row' id= 'basiccontainsvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic Contains Validation</h2>\r\n\r\n<p>Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p>Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-code\" key=\"contains-add-component\"></div> \r\n<p>Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"contains-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-contains-add\"></div>\r\n</div></div>\r\n<div class='row' id= 'containsconfig'>\r\n<div class='col-lg-12'>\r\n<h2>ContainsConfig</h2>\r\n\r\n<p>conditionalExpression and message options are not mandatory but value is mandatory to use in the <span class='highlighted'>@contains()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a href=\"#value\" (click)='scrollTo(\"#value\")' title=\"value\">value</a></td><td>This is substring value.</td></tr>\r\n<tr><td><a href=\"#conditionalExpression\" (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>Contains validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a href=\"#message\"  (click)='scrollTo(\"#message\")' title=\"message\">Message</a></td><td>To override the global configuration message and show the custom message on particular control property.</td></tr>\r\n</div></div>\r\n<div class='row' id= 'value'>\r\n<div class='col-lg-12'>\r\n<h2>value</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>This is substring value.</p>\r\n<div component=\"app-code\" key=\"contains-valueExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-contains-value\" title=\"contains decorators with value\" key=\"value\"></div>\r\n</div></div>\r\n<div class='row' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression</h2>\r\n\r\n<p>Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p>Contains validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p>If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"contains-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"contains-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-contains-conditionalExpression\" title=\"contains decorators with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>To override the global configuration message and show the custom message on particular control property.</p>\r\n<div component=\"app-code\" key=\"contains-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-contains-message\" title=\"contains decorators with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row' id= 'completecontainsexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete Contains Example</h2>\r\n\r\n<p>This Complete Contains example which includes all the ContainsConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row' id= 'dynamiccontainsexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic Contains Example</h2>\r\n\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row\">\r\n<div class=\"col-lg-12\">\r\n<app-disqus></app-disqus>\r\n</div>\r\n</div>\r\n"}