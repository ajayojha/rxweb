{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-complete-template-driven',\r\n    templateUrl: './max-length-complete.component.html'\r\n})\r\nexport class MaxLengthCompleteTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" name=\"firstName\" [(ngModel)]=\"user.firstName\"  class=\"form-control\"  [maxLength]=\"{'value':16}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Middle Name' or 'Last name', then you need to add 'First Name' input as 'Bharat'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.firstName?.errors\">{{userForm.controls.firstName?.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Last Name</label>\r\n      <input type=\"text\" name=\"lastName\" [(ngModel)]=\"user.lastName\"  class=\"form-control\"  [maxLength]=\"{'value':16,'conditionalExpression':'x => x.firstName == \\'Bharat\\''}\" />\r\n      <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Last Name' field, write 'Bharat' in 'First Name' textbox because it is conditional expression. and maximum length is 16<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.lastName?.errors\">{{userForm.controls.lastName?.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n      <input type=\"text\" name=\"userName\" [(ngModel)]=\"user.userName\"  class=\"form-control\"  [maxLength]=\"{'value':10,'message':'Maximum 10 characters are allowed'}\" />\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.userName?.errors\">{{userForm.controls.userName?.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tfirstName: string;\r\n\r\n\tmiddleName: string;\r\n\r\n\tlastName: string;\r\n\r\n\tuserName: string;\r\n\r\n}\r\n","json":null},"valueExample":{"notes":null,"component":null,"html":null,"model":"[maxLength]=\"{'value':16}\"","json":null},"value":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-value-template-driven',\r\n    templateUrl: './max-length-value.component.html'\r\n})\r\nexport class MaxLengthValueTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" name=\"firstName\" [(ngModel)]=\"user.firstName\"  class=\"form-control\"  [maxLength]=\"{'value':16}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Middle Name' or 'Last name', then you need to add 'First Name' input as 'Bharat'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.firstName?.errors\">{{userForm.controls.firstName?.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tfirstName: string;\r\n\r\n}\r\n","json":null},"valueExampleFunction":{"notes":null,"component":null,"html":null,"model":"[maxLength]=\"{'value':16,'conditionalExpression':(x,y)=> x.firstName == \\'Bharat\\'}\"","json":null},"valueExampleFunctionconditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"[maxLength]=\"{'value':16,'conditionalExpression':(x,y)=> x.firstName == \\'Bharat\\'}\"","json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-conditionalExpression-template-driven',\r\n    templateUrl: './max-length-conditional-expression.component.html'\r\n})\r\nexport class MaxLengthConditionalExpressionTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" name=\"firstName\" [(ngModel)]=\"user.firstName\"  class=\"form-control\"  [maxLength]=\"{'value':16}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Middle Name' or 'Last name', then you need to add 'First Name' input as 'Bharat'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.firstName?.errors\">{{userForm.controls.firstName?.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Last Name</label>\r\n      <input type=\"text\" name=\"lastName\" [(ngModel)]=\"user.lastName\"  class=\"form-control\"  [maxLength]=\"{'value':16,'conditionalExpression':'x => x.firstName == \\'Bharat\\''}\" />\r\n      <small class=\"form-text text-muted\">To apply the validation of lowerCase on 'Last Name' field, write 'Bharat' in 'First Name' textbox because it is conditional expression. and maximum length is 16<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.lastName?.errors\">{{userForm.controls.lastName?.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tfirstName: string;\r\n\r\n\tlastName: string;\r\n\r\n\tmiddleName: string;\r\n\r\n}\r\n","json":null},"valueExampleString":{"notes":null,"component":null,"html":null,"model":"[maxLength]=\"{'value':16,'conditionalExpression':'x => x.firstName == \\'Bharat\\''}\"","json":null},"valueExampleStringconditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"[maxLength]=\"{'value':16,'conditionalExpression':'x => x.firstName == \\'Bharat\\''}\"","json":null},"valueExamplemessageExample":{"notes":null,"component":null,"html":null,"model":"[maxLength]=\"{'value':10,'message':'Maximum 10 characters are allowed'}\"","json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-message-template-driven',\r\n    templateUrl: './max-length-message.component.html'\r\n})\r\nexport class MaxLengthMessageTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>User Name</label>\r\n      <input type=\"text\" name=\"userName\" [(ngModel)]=\"user.userName\"  class=\"form-control\"  [maxLength]=\"{'value':10,'message':'Maximum 10 characters are allowed'}\" />\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.userName?.errors\">{{userForm.controls.userName?.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\tuserName: string;\r\n\r\n}\r\n","json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-maxLength-add-template-driven',\r\n    templateUrl: './max-length-add.component.html'\r\n})\r\nexport class MaxLengthAddTemplateDrivenComponent implements OnInit {\r\n    location: Location\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #locationForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>First Name</label>\r\n      <input type=\"text\" name=\"firstName\" [(ngModel)]=\"location.firstName\"  class=\"form-control\"  [maxLength]=\"{'value':10}\" />\r\n      <small class=\"form-text text-muted\">Maximum Length Upto 10 characters<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.firstName?.errors\">{{locationForm.controls.firstName?.errors.maxLength.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class Location {\r\n\r\n\tfirstName: string;\r\n\r\n}\r\n","json":null}}