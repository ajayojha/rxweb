{"rightSidebarLinks":[{"id":"lowercase","title":"lowerCase (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basiclowercasevalidation","title":"Basic LowerCase Validation","subLink":[]},{"id":"messageconfig","title":"MessageConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completelowercaseexample","title":"Complete lowerCase Example","subLink":[]},{"id":"dynamiclowercaseexample","title":"Dynamic lowercase Example","subLink":[]},{"id":"githubissues","title":"lowerCase Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"lowerCase","description":" lowerCase validation decorator will allow user to enter only the lowercase alphabets.","validatorType":"Template Driven","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-lowerCase-complete\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lowerCase-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-lowerCase-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lowerCase-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lowerCase-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"lowerCase-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2>When to use</h2>\r\n\r\n<p>Suppose you want to create a User form, which contains fields like Username, FirstName, LastName and you want the user to enter any string only in lowercase. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol>\r\n    <li>Allow only lowercase alphabets in Username.</li>\r\n    <li>Apply lowerCase validation based on matched condition in the form, like if the Username is <span class='highlighted'>jonathan.feldman</span>, then only the lowerCase validation will be applied to FirstName field.</li>\r\n    <li>Adding Custom Message on LastName Field.</li>\r\n    <li>Apply lowerCase validation dynamically based on server rules./li>\r\n</ol>\r\n<p>Letâ€™s see how lowerCase decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row' id= 'basiclowercasevalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic LowerCase Validation</h2>\r\n\r\n<p>Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p>Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-code\" key=\"lowerCase-add-component\"></div> \r\n<p>Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"lowerCase-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-lowerCase-add\"></div>\r\n</div></div>\r\n<div class='row' id= 'messageconfig'>\r\n<div class='col-lg-12'>\r\n<h2>MessageConfig</h2>\r\n\r\n<p>Below options are not mandatory to use in the <span class='highlighted'>@lowerCase()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a href=\"#conditionalExpression\" title=\"conditionalExpression\">conditionalExpression</a></td><td>LowerCase validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a href=\"#message\" title=\"message\">message</a></td><td>To override the global configuration message and show the custom message on particular control property.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression</h2>\r\n\r\n<p>Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p>Lowercase validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p>If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"lowerCase-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"lowerCase-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-lowerCase-conditionalExpression\" title=\"lowerCase decorators with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>To override the global configuration message and show the custom message on particular control property.</p>\r\n<div component=\"app-code\" key=\"lowerCase-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-lowerCase-message\" title=\"lowerCase decorators with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row' id= 'completelowercaseexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete lowerCase Example</h2>\r\n\r\n<p>This Complete lowerCase example which includes all the MessageConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row' id= 'dynamiclowercaseexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic lowercase Example</h2>\r\n\r\n<p>This Dynamic lowercase example which execute based on json passed. conditional expression with function would be not apply in dynamic lowerCase example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row\">\r\n<div class=\"col-lg-12\">\r\n<app-disqus></app-disqus>\r\n</div>\r\n</div>\r\n"}