{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-complete-template-driven',\r\n    templateUrl: './upper-case-complete.component.html'\r\n})\r\nexport class UpperCaseCompleteTemplateDrivenComponent implements OnInit {\r\n    location: Location\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #locationForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" name=\"countryName\" [(ngModel)]=\"location.countryName\"  class=\"form-control\"  upperCase />\r\n      <small class=\"form-text text-muted\">Enter the 'INDIA' in 'Country Name' or 'City Name' text box to see the validation in 'State Name' text box.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.countryName?.errors\">{{locationForm.controls.countryName?.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>City Name</label>\r\n      <input type=\"text\" name=\"cityName\" [(ngModel)]=\"location.cityName\"  class=\"form-control\"  [upperCase]=\"{'conditionalExpression':'x => x.countryName == \\'INDIA\\''}\" />\r\n      <small class=\"form-text text-muted\">To apply the validation of upperCase on 'City Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.cityName?.errors\">{{locationForm.controls.cityName?.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Colony Name</label>\r\n      <input type=\"text\" name=\"colonyName\" [(ngModel)]=\"location.colonyName\"  class=\"form-control\"  [upperCase]=\"{'message':'You can enter only upperCase letters.'}\" />\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.colonyName?.errors\">{{locationForm.controls.colonyName?.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class Location {\r\n\r\n\tcountryName: string;\r\n\r\n\tstateName: string;\r\n\r\n\tcityName: string;\r\n\r\n\tcolonyName: string;\r\n\r\n}\r\n","json":null},"conditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"[upperCase]=\"{'conditionalExpression':(x,y) => x.countryName == \\'INDIA\\' }\"","json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-conditionalExpression-template-driven',\r\n    templateUrl: './upper-case-conditional-expression.component.html'\r\n})\r\nexport class UpperCaseConditionalExpressionTemplateDrivenComponent implements OnInit {\r\n    location: Location\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #locationForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" name=\"countryName\" [(ngModel)]=\"location.countryName\"  class=\"form-control\"  upperCase />\r\n      <small class=\"form-text text-muted\">Enter the 'INDIA' in 'Country Name' or 'City Name' text box to see the validation in 'State Name' text box.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.countryName?.errors\">{{locationForm.controls.countryName?.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>City Name</label>\r\n      <input type=\"text\" name=\"cityName\" [(ngModel)]=\"location.cityName\"  class=\"form-control\"  [upperCase]=\"{'conditionalExpression':'x => x.countryName == \\'INDIA\\''}\" />\r\n      <small class=\"form-text text-muted\">To apply the validation of upperCase on 'City Name' field, then enter the value of 'INDIA' in 'Country Name' textbox.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.cityName?.errors\">{{locationForm.controls.cityName?.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class Location {\r\n\r\n\tcountryName: string;\r\n\r\n\tcityName: string;\r\n\r\n\tstateName: string;\r\n\r\n}\r\n","json":null},"conditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"[upperCase]=\"{'conditionalExpression':'x => x.countryName == \\'INDIA\\''}\"","json":null},"messageExample":{"notes":null,"component":null,"html":null,"model":"[upperCase]=\"{'message':'You can enter only upperCase letters.'}\"","json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-message-template-driven',\r\n    templateUrl: './upper-case-message.component.html'\r\n})\r\nexport class UpperCaseMessageTemplateDrivenComponent implements OnInit {\r\n    location: Location\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #locationForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Colony Name</label>\r\n      <input type=\"text\" name=\"colonyName\" [(ngModel)]=\"location.colonyName\"  class=\"form-control\"  [upperCase]=\"{'message':'You can enter only upperCase letters.'}\" />\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.colonyName?.errors\">{{locationForm.controls.colonyName?.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class Location {\r\n\r\n\tcolonyName: string;\r\n\r\n}\r\n","json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-upperCase-add-template-driven',\r\n    templateUrl: './upper-case-add.component.html'\r\n})\r\nexport class UpperCaseAddTemplateDrivenComponent implements OnInit {\r\n    location: Location\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #locationForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Country Name</label>\r\n      <input type=\"text\" name=\"countryName\" [(ngModel)]=\"location.countryName\"  class=\"form-control\"  upperCase />\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.countryName?.errors\">{{locationForm.controls.countryName?.errors.upperCase.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class Location {\r\n\r\n\tcountryName: string;\r\n\r\n}\r\n","json":null}}