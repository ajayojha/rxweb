{"rightSidebarLinks":[{"id":"password","title":"password (Decorator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicpasswordvalidation","title":"Basic password Validation","subLink":[]},{"id":"passwordconfig","title":"PasswordConfig","subLink":[{"title":"message","id":"message"},{"title":"validation","id":"validation"}]},{"id":"completepasswordexample","title":"Complete password Example","subLink":[]},{"id":"dynamicpasswordexample","title":"Dynamic password Example","subLink":[]},{"id":"githubissues","title":"password Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"password","description":" Password validation decorator will allow user to enter only the input according to correct password validation format.","validatorType":"Decorators","tabArray":{"basic-operations":[{"tabName":"Add","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"password-add-component\"></div> \r\n<p>Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"password-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-password-add\"></div>\r\n"},{"tabName":"Edit","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"password-edit-component\"></div>\r\n<p>The below code is `login-info-data.json` for getting data from the server </p>\r\n<div component=\"app-code\" key=\"data-password\"></div> \r\n<p>Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"password-edit-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-password-edit\"></div>\r\n"}],"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-password-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"password-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"password-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"password-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-password-dynamic\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"password-dynamic-model\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"password-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"password-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"password-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2>When to use</h2>\r\n\r\n<p>Suppose you want to create a login form, which contains fields like newPassword and oldPassword and you want the user to enter valid Password pattern. Here depending upon the requirement these scenarios may arise.\t</p>\r\n<ol>\r\n   <li>Adding validation on oldPassword Field and adding  Custom Message on it.</li>\r\n   <li>Apply validation in newPassword validation there is validators on digit, alphabets, contains, lowerCase, upperCase, specialCharacter,        minLength, maxLength.</li>\r\n   <li>Apply password validation dynamically based on server rules.</li>\r\n</ol>\r\n<p>Letâ€™s see how password validator fulfil the need.</p>\r\n</div></div>\r\n<div class='row' id= 'basicpasswordvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic password Validation</h2>\r\n\r\n<p>First we need to create LoginInfo model class define a property of password in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"password-add-model\"></div> \r\n<p>Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p>Here we have covered Add and Edit form operations.</p>\r\n<div component=\"app-tabs\" key=\"basic-operations\"></div>\r\n</div></div>\r\n<div class='row' id= 'passwordconfig'>\r\n<div class='col-lg-12'>\r\n<h2>PasswordConfig</h2>\r\n\r\n<p>message options are not mandatory to use in the <span class='highlighted'>@password()</span> decorator but validation is mandatory. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a href=\"#message\" (click)='scrollTo(\"#message\")' title=\"message\">Message</a></td><td>To override the global configuration message and show the custom message on particular control property.</td></tr>\r\n<tr><td><a href=\"#validation\" (click)='scrollTo(\"#validation\")'  title=\"validation\"> Validation is used for setting the parameters for password validation, In Password validation there is validations on digit, alphabets, contains, lowerCase, upperCase, specialCharacter, minLength, maxLength.</td></tr>\r\n</div></div>\r\n<div class='row' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>To override the global configuration message and show the custom message on particular control property.</p>\r\n<div component=\"app-code\" key=\"password-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-password-message\" title=\"password decorators with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row' id= 'validation'>\r\n<div class='col-lg-12'>\r\n<h2>validation</h2>\r\n\r\n<p>Type :  <span class='highlighted'>PasswordValidation</span></p>\r\n<p>Password Validation is used for setting the parameters for password validation, In Password validation there is validation on digit, alphabets, contains, lowerCase, upperCase, specialCharacter, minLength, maxLength.</p>\r\n<div component=\"app-code\" key=\"password-validationExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-password-validation\" title=\"password decorators with validation\" key=\"validation\"></div>\r\n</div></div>\r\n<div class='row' id= 'completepasswordexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete password Example</h2>\r\n\r\n<p>This Complete password example which includes all the PasswordConfig properties will fulfil the requirement of scenarios 1 and 2.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row' id= 'dynamicpasswordexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic password Example</h2>\r\n\r\n<p>This Dynamic password example which execute based on json passed. conditional expression with function would be not apply in dynamic password example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row\">\r\n<div class=\"col-lg-12\">\r\n<app-disqus></app-disqus>\r\n</div>\r\n</div>\r\n"}