{"rightSidebarLinks":[{"id":"allof","title":"allOf (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicallofvalidation","title":"Basic allOf Validation","subLink":[]},{"id":"arrayconfig","title":"ArrayConfig","subLink":[{"title":"matchValue","id":"matchvalue"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completeallofexample","title":"Complete allOf Example","subLink":[]},{"id":"dynamicallofexample","title":"Dynamic allOf Example","subLink":[]},{"id":"githubissues","title":"allOf Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"allOf","description":" allOf validation decorator will check whether the user has entered all of the values of given field or not.","validatorType":"Template Driven","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-allOf-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"allOf-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"allOf-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-allOf-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"allOf-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"allOf-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"allOf-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2>When to use</h2>\r\n\r\n<p>Suppose you want to create a employee form in  which contains fields like department, hobbies and skills.You want employee to enter all value of a particular field here the field is taken in the form of array and according to that the choice is applied on the property by applying matchvalues. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol>\r\n    <li>The skills field in which you want the user to enter skills based upon matchvalues.</li>\r\n    <li>Apply allOf validation based on matched condition in the form, like if the department  is ‘dotnet’ then the skills value should be based upon matchvalues.</li>\r\n    <li>The Custom Message on Hobbies field.</li>\r\n    <li>Apply allOf validation dynamically based on server rules.</li>\r\n</ol>\r\n<p>Let’s see how allOf decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row' id= 'basicallofvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic allOf Validation</h2>\r\n\r\n<p>Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p>Here we have covered Add and Edit form operations.</p>\r\n<div component=\"app-code\" key=\"allOf-add-component\"></div> \r\n<p>Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"allOf-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-allOf-add\"></div>\r\n</div></div>\r\n<div class='row' id= 'arrayconfig'>\r\n<div class='col-lg-12'>\r\n<h2>ArrayConfig</h2>\r\n\r\n<p>Below options are not mandatory to use in the <span class='highlighted'>@allOf()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a href=\"#matchValue\" (click)='scrollTo(\"#matchValue\")' title=\"#matchValue\">matchValue</a></td><td>matchValue is the array based on which the value is matched for validation. According to it all the values in the array should be matched</td></tr>\r\n<tr><td><a href=\"#conditionalExpression\" (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>AllOf validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a href=\"#message\" (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and show the custom message on particular control property.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row' id= 'matchvalue'>\r\n<div class='col-lg-12'>\r\n<h2>matchValue</h2>\r\n\r\n<p>Type :  <span class='highlighted'>any[]</span> </p>\r\n<p>matchValue is the array based on which the value is matched for validation. According to it all the values in the array should be matched.</p>\r\n<div component=\"app-code\" key=\"allOf-matchValueExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-allOf-matchValue\" title=\"allOf decorators with matchValue\" key=\"matchValue\"></div>\r\n</div></div>\r\n<div class='row' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression</h2>\r\n\r\n<p>Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span>  </p>\r\n<p>AllOf validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p>If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"allOf-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"allOf-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-allOf-conditionalExpression\" title=\"allOf decorators with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>To override the global configuration message and show the custom message on particular control property.</p>\r\n<div component=\"app-code\" key=\"allOf-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-allOf-message\" title=\"allOf decorators with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row' id= 'completeallofexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete allOf Example</h2>\r\n\r\n<p>This Complete allOf example which includes all the ArrayConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row' id= 'dynamicallofexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic allOf Example</h2>\r\n\r\n<p>This Dynamic AllOf example which execute based on json passed. conditional expression with function would be not apply in dynamic allOf example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row\">\r\n<div class=\"col-lg-12\">\r\n<app-disqus></app-disqus>\r\n</div>\r\n</div>\r\n"}