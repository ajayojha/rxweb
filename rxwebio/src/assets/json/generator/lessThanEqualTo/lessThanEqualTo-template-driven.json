{"complete":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualTo-complete-template-driven',\r\n    templateUrl: './less-than-equal-to-complete.component.html'\r\n})\r\nexport class LessThanEqualToCompleteTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Total Marks</label>\r\n      <input type=\"text\" name=\"totalMarks\" [(ngModel)]=\"user.totalMarks\"  class=\"form-control\"  lessThanEqualTo />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation of less than equal to validation on obtained marks or practical exam marks then Total Marks must be 100.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.totalMarks?.errors\">{{userForm.controls.totalMarks?.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Practical Exam Marks</label>\r\n      <input type=\"text\" name=\"practicalExamMarks\" [(ngModel)]=\"user.practicalExamMarks\"  class=\"form-control\"  [lessThanEqualTo]=\"{'fieldName':'totalMarks','conditionalExpression':'x => x.totalMarks == 100'}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation of less than equal to validation on 'Obtained Marks' then then Total Marks must be 100.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.practicalExamMarks?.errors\">{{userForm.controls.practicalExamMarks?.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Marks</label>\r\n      <input type=\"text\" name=\"otherMarks\" [(ngModel)]=\"user.otherMarks\"  class=\"form-control\"  [lessThanEqualTo]=\"{'fieldName':'totalMarks','message':'Please enter number less than 100.'}\" />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.otherMarks?.errors\">{{userForm.controls.otherMarks?.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\ttotalMarks: number;\r\n\r\n\tobtainedMarks: number;\r\n\r\n\tpracticalExamMarks: number;\r\n\r\n\totherMarks: number;\r\n\r\n}\r\n","json":null},"fieldNameExampleFunction":{"notes":null,"component":null,"html":null,"model":"[lessThanEqualTo]=\"{'fieldName':'totalMarks','conditionalExpression':(x,y) => x.totalMarks == 100 }\"","json":null},"fieldName":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualTo-fieldName-template-driven',\r\n    templateUrl: './less-than-equal-to-field-name.component.html'\r\n})\r\nexport class LessThanEqualToFieldNameTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Total Marks</label>\r\n      <input type=\"text\" name=\"totalMarks\" [(ngModel)]=\"user.totalMarks\"  class=\"form-control\"  lessThanEqualTo />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation of less than equal to validation on obtained marks or practical exam marks then Total Marks must be 100.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.totalMarks?.errors\">{{userForm.controls.totalMarks?.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Practical Exam Marks</label>\r\n      <input type=\"text\" name=\"practicalExamMarks\" [(ngModel)]=\"user.practicalExamMarks\"  class=\"form-control\"  [lessThanEqualTo]=\"{'fieldName':'totalMarks','conditionalExpression':'x => x.totalMarks == 100'}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation of less than equal to validation on 'Obtained Marks' then then Total Marks must be 100.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.practicalExamMarks?.errors\">{{userForm.controls.practicalExamMarks?.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\ttotalMarks: number;\r\n\r\n\tpracticalExamMarks: number;\r\n\r\n\tobtainedMarks: number;\r\n\r\n}\r\n","json":null},"fieldNameExampleFunctionconditionalExpressionExampleFunction":{"notes":null,"component":null,"html":null,"model":"[lessThanEqualTo]=\"{'fieldName':'totalMarks','conditionalExpression':(x,y) => x.totalMarks == 100 }\"","json":null},"conditionalExpression":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualTo-conditionalExpression-template-driven',\r\n    templateUrl: './less-than-equal-to-conditional-expression.component.html'\r\n})\r\nexport class LessThanEqualToConditionalExpressionTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Total Marks</label>\r\n      <input type=\"text\" name=\"totalMarks\" [(ngModel)]=\"user.totalMarks\"  class=\"form-control\"  lessThanEqualTo />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation of less than equal to validation on obtained marks or practical exam marks then Total Marks must be 100.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.totalMarks?.errors\">{{userForm.controls.totalMarks?.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Practical Exam Marks</label>\r\n      <input type=\"text\" name=\"practicalExamMarks\" [(ngModel)]=\"user.practicalExamMarks\"  class=\"form-control\"  [lessThanEqualTo]=\"{'fieldName':'totalMarks','conditionalExpression':'x => x.totalMarks == 100'}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation of less than equal to validation on 'Obtained Marks' then then Total Marks must be 100.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.practicalExamMarks?.errors\">{{userForm.controls.practicalExamMarks?.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\ttotalMarks: number;\r\n\r\n\tpracticalExamMarks: number;\r\n\r\n\tobtainedMarks: number;\r\n\r\n}\r\n","json":null},"fieldNameExampleString":{"notes":null,"component":null,"html":null,"model":"[lessThanEqualTo]=\"{'fieldName':'totalMarks','conditionalExpression':'x => x.totalMarks == 100'}\"","json":null},"fieldNameExampleStringconditionalExpressionExampleString":{"notes":null,"component":null,"html":null,"model":"[lessThanEqualTo]=\"{'fieldName':'totalMarks','conditionalExpression':'x => x.totalMarks == 100'}\"","json":null},"fieldNameExample":{"notes":null,"component":null,"html":null,"model":"[lessThanEqualTo]=\"{'fieldName':'totalMarks','message':'Please enter number less than 100.'}\"","json":null},"fieldNameExamplemessageExample":{"notes":null,"component":null,"html":null,"model":"[lessThanEqualTo]=\"{'fieldName':'totalMarks','message':'Please enter number less than 100.'}\"","json":null},"message":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualTo-message-template-driven',\r\n    templateUrl: './less-than-equal-to-message.component.html'\r\n})\r\nexport class LessThanEqualToMessageTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Total Marks</label>\r\n      <input type=\"text\" name=\"totalMarks\" [(ngModel)]=\"user.totalMarks\"  class=\"form-control\"  lessThanEqualTo />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation of less than equal to validation on obtained marks or practical exam marks then Total Marks must be 100.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.totalMarks?.errors\">{{userForm.controls.totalMarks?.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Practical Exam Marks</label>\r\n      <input type=\"text\" name=\"practicalExamMarks\" [(ngModel)]=\"user.practicalExamMarks\"  class=\"form-control\"  [lessThanEqualTo]=\"{'fieldName':'totalMarks','conditionalExpression':'x => x.totalMarks == 100'}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation of less than equal to validation on 'Obtained Marks' then then Total Marks must be 100.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.practicalExamMarks?.errors\">{{userForm.controls.practicalExamMarks?.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Marks</label>\r\n      <input type=\"text\" name=\"otherMarks\" [(ngModel)]=\"user.otherMarks\"  class=\"form-control\"  [lessThanEqualTo]=\"{'fieldName':'totalMarks','message':'Please enter number less than 100.'}\" />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.otherMarks?.errors\">{{userForm.controls.otherMarks?.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\ttotalMarks: number;\r\n\r\n\tpracticalExamMarks: number;\r\n\r\n\totherMarks: number;\r\n\r\n}\r\n","json":null},"add":{"notes":[],"component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-lessThanEqualTo-add-template-driven',\r\n    templateUrl: './less-than-equal-to-add.component.html'\r\n})\r\nexport class LessThanEqualToAddTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Total Marks</label>\r\n      <input type=\"text\" name=\"totalMarks\" [(ngModel)]=\"user.totalMarks\"  class=\"form-control\"  lessThanEqualTo />\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.totalMarks?.errors\">{{userForm.controls.totalMarks?.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Marks</label>\r\n      <input type=\"text\" name=\"marks\" [(ngModel)]=\"user.marks\"  class=\"form-control\"  [lessThanEqualTo]=\"{'fieldName':'totalMarks'}\" />\r\n      <small class=\"form-text text-muted\">This is checking less than equal to validation for  Marks must be less than equal to Total Marks.<br/></small>\r\n\t   <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.marks?.errors\">{{userForm.controls.marks?.errors.lessThanEqualTo.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","model":"\r\nexport class User {\r\n\r\n\ttotalMarks: number;\r\n\r\n\tmarks: number;\r\n\r\n}\r\n","json":null}}