{"rightSidebarLinks":[{"id":"different","title":"different (Decorator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicdifferentvalidation","title":"Basic Different Validation","subLink":[]},{"id":"differentconfig","title":"DifferentConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"fieldName","id":"fieldname"},{"title":"message","id":"message"}]},{"id":"completedifferentexample","title":"Complete Different Example","subLink":[]},{"id":"dynamicdifferentexample","title":"Dynamic Different Example","subLink":[]},{"id":"githubissues","title":"different Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"different","description":" Different validation decorator will check two inputs whether they are different or not. It is just opposite of compare decorator.","validatorType":"Decorators","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-different-complete\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"different-complete-model\"></div> \r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"different-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"different-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-different-dynamic\"></div>\r\n"},{"tabName":"Model","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"different-dynamic-model\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"different-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"different-dynamic-json\"></div>\r\n"}]},"innerHtml":null,"htmlContent":"<div class='row' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2>When to use</h2>\r\n\r\n<p>Suppose you want to create a user form in which you want to compare firstname and LastName which are entered by the user which contains fields like firstname and lastname, password Here depending upon the requirement these scenarios may arise.</p>\r\n<ol>\r\n    <li>The Name of firstName field on which comparison is done.</li>\r\n    <li>The Custom Message on password field.</li>\r\n    <li>Apply different validation dynamically based on server rules.</li>\r\n</ol>\r\n<p>Letâ€™s see how different decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row' id= 'basicdifferentvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic Different Validation</h2>\r\n\r\n<p>First we need to create a User Model class and define property of Password and Confirm Password in the model to achieve the functional need of point 1.</p>\r\n<div component=\"app-code\" key=\"different-add-model\"></div> \r\n<p>Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p>Here we have covered Add form operations. </p>\r\n<div component=\"app-code\" key=\"different-add-component\"></div> \r\n<p>Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"different-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-different-add\"></div>\r\n</div></div>\r\n<div class='row' id= 'differentconfig'>\r\n<div class='col-lg-12'>\r\n<h2>DifferentConfig</h2>\r\n\r\n<p>Below options are not mandatory to use in the <span class='highlighted'>@different()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a href=\"#fieldName\" (click)='scrollTo(\"#fieldName\")' title=\"fieldName\">fieldName</a></td><td>Current property is matched with the particular property. so we need to pass particular property name.</td></tr>\r\n<tr><td><a href=\"#conditionalExpression\" (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>Different validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a href=\"#message\" (click)='scrollTo(\"#message\")' title=\"message\">message</a></td><td>To override the global configuration message and show the custom message on particular control property.</td></tr>\r\n</table>\r\n</div></div>\r\n<div class='row' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression</h2>\r\n\r\n<p>Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p>Different validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p>If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"different-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"different-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-different-conditionalExpression\" title=\"different decorators with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row' id= 'fieldname'>\r\n<div class='col-lg-12'>\r\n<h2>fieldName</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>Current property is matched with the particular property. so we need to pass particular property name.</p>\r\n<div component=\"app-code\" key=\"different-fieldNameExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-different-fieldName\" title=\"different decorators with fieldName\" key=\"fieldName\"></div>\r\n</div></div>\r\n<div class='row' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>To override the global configuration message and show the custom message on particular control property.</p>\r\n<div component=\"app-code\" key=\"different-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-different-message\" title=\"different decorators with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row' id= 'completedifferentexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete Different Example</h2>\r\n\r\n<p>This Complete Different example which includes all the DifferentConfig properties will fulfil the requirement of scenarios 1 and 2 </p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row' id= 'dynamicdifferentexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic Different Example</h2>\r\n\r\n<p>This Dynamic Different example which execute based on json passed. conditional expression with function would be not apply in dynamic different example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row\">\r\n<div class=\"col-lg-12\">\r\n<app-disqus></app-disqus>\r\n</div>\r\n</div>\r\n"}