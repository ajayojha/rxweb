{"rightSidebarLinks":[{"id":"minnumber","title":"minNumber (Template Driven)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicminnumbervalidation","title":"Basic MinNumber Validation","subLink":[]},{"id":"numberconfig","title":"NumberConfig","subLink":[{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"},{"title":"value","id":"value"}]},{"id":"completeminnumberexample","title":"Complete minNumber Example","subLink":[]},{"id":"dynamicminnumberexample","title":"Dynamic minNumber Example","subLink":[]},{"id":"githubissues","title":"minNumber Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"minNumber","description":" MinNumber validation decorator will allow user to enter the input greater than the minimum number value parameter.","validatorType":"Template Driven","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-minNumber-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"minNumber-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"minNumber-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"minNumber-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"minNumber-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"minNumber-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2>When to use</h2>\r\n\r\n<p>Suppose you want to create a ResultInfo form, which contains fields like Maths, Science, Statistics and you want the user to enter number which should not be less than a minimum number. Here depending upon the requirement these scenarios may arise.</p>\r\n<ol>\r\n\t<li>Allow number greater than 35 in Maths field.</li>\r\n\t<li>Apply minNumber validation based on matched condition in the form, like if the input of Maths is 50, then only the minNumber validation will be applied to Statistics field.</li>\r\n\t<li>Adding Custom Message on Science Field.</li>\r\n\t<li>Apply minNumber validation dynamically based on server rules.</li>\r\n</ol>\r\n<p>Letâ€™s see how minNumber validator fulfil the need.</p>\r\n</div></div>\r\n<div class='row' id= 'basicminnumbervalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic MinNumber Validation</h2>\r\n\r\n<p>Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p>Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-code\" key=\"minNumber-add-component\"></div> \r\n<p>Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"minNumber-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-minNumber-add\"></div>\r\n</div></div>\r\n<div class='row' id= 'numberconfig'>\r\n<div class='col-lg-12'>\r\n<h2>NumberConfig</h2>\r\n\r\n<p>message and conditional expression options are not mandatory to use in the <span class='highlighted'>@minNumber()</span> decorator but value is mandatory. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a href=\"#conditionalExpression\" (click)='scrollTo(\"#conditionalExpression\")' title=\"conditionalExpression\">conditionalExpression</a></td><td>minNumber validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a href=\"#message\" (click)='scrollTo(\"#message\")' title=\"message\">Message</a></td><td>To override the global configuration message and show the custom message on particular control property.</td></tr>\r\n<tr><td><a href=\"#value\" (click)='scrollTo(\"#value\")' title=\"value\">value</a></td> enter value which you want to restrict number in the property.</td></tr>\r\n</div></div>\r\n<div class='row' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression</h2>\r\n\r\n<p>Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p>Min Number validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p>If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"minNumber-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"minNumber-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-minNumber-conditionalExpression\" title=\"minNumber decorators with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>To override the global configuration message and show the custom message on particular control property.</p>\r\n<div component=\"app-code\" key=\"minNumber-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-minNumber-message\" title=\"minNumber decorators with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row' id= 'value'>\r\n<div class='col-lg-12'>\r\n<h2>value</h2>\r\n\r\n<p>Type :  <span class='highlighted'>number</span> </p>\r\n<p>enter value which you want to restrict number in the property</p>\r\n<div component=\"app-code\" key=\"minNumber-valueExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"minNumber-value-value\" title=\"minNumber decorators with value\" key=\"value\"></div>\r\n</div></div>\r\n<div class='row' id= 'completeminnumberexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete minNumber Example</h2>\r\n\r\n<p>This Complete minNumber example which includes all the NumberConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row' id= 'dynamicminnumberexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic minNumber Example</h2>\r\n\r\n<p>This Dynamic minNumber example which execute based on json passed. conditional expression with function would be not apply in dynamic minNumber example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row\">\r\n<div class=\"col-lg-12\">\r\n<app-disqus></app-disqus>\r\n</div>\r\n</div>\r\n"}