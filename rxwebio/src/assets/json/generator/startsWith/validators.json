{"rightSidebarLinks":[{"id":"startswith","title":"startsWith (Validator)","subLink":null},{"id":"whentouse","title":"When to use","subLink":[]},{"id":"basicstartswithvalidation","title":"Basic StartsWith Validation","subLink":[]},{"id":"defaultconfig","title":"DefaultConfig","subLink":[{"title":"value","id":"value"},{"title":"conditionalExpression","id":"conditionalexpression"},{"title":"message","id":"message"}]},{"id":"completestartswithexample","title":"Complete StartsWith Example","subLink":[]},{"id":"dynamicstartswithexample","title":"Dynamic StartsWith Example","subLink":[]},{"id":"githubissues","title":"startsWith Github Issues","subLink":null},{"id":"discussion","title":"Discussion","subLink":null}],"title":"startsWith","description":" startsWith validation decorator allows user to enter the input which starts with particular value.","validatorType":"Validators","tabArray":{"complete":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-startsWith-complete\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"startsWith-complete-component\"></div> \r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"startsWith-complete-html\"></div> \r\n"}],"dynamic":[{"tabName":"Example","tabGroupContent":null,"content":"<div component=\"app-example-runner\" ref-component=\"app-startsWith-dynamic\"></div>\r\n"},{"tabName":"Component","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"startsWith-dynamic-component\"></div>\r\n"},{"tabName":"Json","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"startsWith-dynamic-json\"></div>\r\n"},{"tabName":"Html","tabGroupContent":null,"content":"<div component=\"app-code\" key=\"startsWith-dynamic-html\"></div> \r\n"}]},"innerHtml":null,"htmlContent":"<div class='row' id= 'whentouse'>\r\n<div class='col-lg-12'>\r\n<h2>When to use</h2>\r\n\r\n<p>Suppose you want to create a user form, which contains fields like userId, name, profession and taskId and you want the user to enter input which starts with a particular value. Here depending upon the requirement, these scenarios may arise..</p>\r\n<ol>\r\n   <li>Apply validation on name field in which you want the user to enter value which starts with ‘j’.</li>\r\n   <li>Apply startsWith validation based on matched condition in the form, like if the name is 'John', then the profession must starts with     'Senior ' (Used as a function).</li>\r\n   <li>Apply startsWith validation based on matched condition in the form, like if the name is 'John', then the taskId must starts with '#'     (Used as a string datatype).</li>\r\n   <li>Apply StartsWith validation dynamically based on server rules.</li>\r\n</ol>\r\n<p>Let's see how StartsWith decorator fulfil the need.</p>\r\n</div></div>\r\n<div class='row' id= 'basicstartswithvalidation'>\r\n<div class='col-lg-12'>\r\n<h2>Basic StartsWith Validation</h2>\r\n\r\n<p>Through Angular FormBuilder service we create FormGroup in the component.</p>\r\n<p>Here we have covered Add and Edit form operations. </p>\r\n<div component=\"app-code\" key=\"startsWith-add-component\"></div> \r\n<p>Next, we need to write html code.</p>\r\n<div component=\"app-code\" key=\"startsWith-add-html\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-startsWith-add\"></div>\r\n</div></div>\r\n<div class='row' id= 'defaultconfig'>\r\n<div class='col-lg-12'>\r\n<h2>DefaultConfig</h2>\r\n\r\n<p>message and conditionalExpression are not mandatory to use in the <span class='highlighted'>@startsWith()</span> decorator. If needed then use the below options.</p>\r\n<table class=\"table table-bordered table-striped\">\r\n<tr><th>Option</th><th>Description</th></tr>\r\n<tr><td><a href=\"value\" (click)='scrollTo(\"#value\")'  title=\"value\">value</a></td> The <span class='highlighted'>value</span> from which the input should starts with.</td></tr>\r\n<tr><td><a href=\"#conditionalExpression\" (click)='scrollTo(\"#conditionalExpression\")'  title=\"conditionalExpression\">conditionalExpression</a></td><td>startsWith validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</td></tr>\r\n<tr><td><a href=\"#message\" (click)='scrollTo(\"#message\")'  title=\"message\">Message</a></td><td>To override the global configuration message and show the custom message on particular control property.</td></tr>\r\n</div></div>\r\n<div class='row' id= 'value'>\r\n<div class='col-lg-12'>\r\n<h2>value</h2>\r\n\r\n<p>Type: <span class='highlighted'>string</span></p>\r\n<p>The <span class='highlighted'>value</span> from which the input should starts with.</p>\r\n<div component=\"app-code\" key=\"startsWith-valueExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-startsWith-value\" title=\"startsWith decorators with value\" key=\"value\"></div>\r\n</div></div>\r\n<div class='row' id= 'conditionalexpression'>\r\n<div class='col-lg-12'>\r\n<h2>conditionalExpression</h2>\r\n\r\n<p>Type :  <span class='highlighted'>Function</span>  |  <span class='highlighted'>string</span> </p>\r\n<p>StartsWith validation should be applied if the condition is matched in the <span class='highlighted'>conditionalExpression</span> function. Validation framework will pass two parameters at the time of <span class='highlighted'>conditionalExpression</span> check. Those two parameters are current <span class='highlighted'>FormGroup</span> value and root <span class='highlighted'>FormGroup</span> value. You can apply the condition on respective object value.</p>\r\n<p>If there is need of dynamic validation means it is not fixed in client code, it will change based on some criterias. In this scenario you can bind the expression based on the expression value is coming from the web server in <span class='highlighted'>string</span> format. The <span class='highlighted'>conditionalExpression</span> will work as same as client function.</p>\r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"startsWith-conditionalExpressionExampleFunction-model\"></div> \r\n<blockquote><p>Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> object.</p></blockquote>\r\n<div component=\"app-code\" key=\"startsWith-conditionalExpressionExampleString-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-startsWith-conditionalExpression\" title=\"startsWith decorators with conditionalExpression\" key=\"conditionalExpression\"></div>\r\n</div></div>\r\n<div class='row' id= 'message'>\r\n<div class='col-lg-12'>\r\n<h2>message</h2>\r\n\r\n<p>Type :  <span class='highlighted'>string</span> </p>\r\n<p>To override the global configuration message and show the custom message on particular control property.</p>\r\n<div component=\"app-code\" key=\"startsWith-messageExample-model\"></div> \r\n<div component=\"app-example-runner\" ref-component=\"app-startsWith-message\" title=\"startsWith decorators with message\" key=\"message\"></div>\r\n</div></div>\r\n<div class='row' id= 'completestartswithexample'>\r\n<div class='col-lg-12'>\r\n<h2>Complete StartsWith Example</h2>\r\n\r\n<p>This Complete startsWith example which includes all the DefaultConfig properties will fulfil the requirement of scenarios 1, 2 and 3.</p>\r\n<div component=\"app-tabs\" key=\"complete\"></div>\r\n</div></div>\r\n<div class='row' id= 'dynamicstartswithexample'>\r\n<div class='col-lg-12'>\r\n<h2>Dynamic StartsWith Example</h2>\r\n\r\n<p>This Dynamic startsWith example which execute based on json passed. conditional expression with function would be not apply in dynamic startsWith example. </p>\r\n<div component=\"app-tabs\" key=\"dynamic\"></div>\r\n</div></div>\r\n<div class=\"row\">\r\n<div class=\"col-lg-12\">\r\n<app-disqus></app-disqus>\r\n</div>\r\n</div>\r\n"}