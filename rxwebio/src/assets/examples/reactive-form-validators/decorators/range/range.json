{"minimumNumberExample":{"Notes":null,"Component":null,"Html":null,"Model":"@range({minimumNumber:18  ,maximumNumber:60 }) \r\nage: number;","Json":null},"maximumNumberExample":{"Notes":null,"Component":null,"Html":null,"Model":"@range({minimumNumber:18  ,maximumNumber:60 }) \r\nage: number;","Json":null},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object."],"Component":null,"Html":null,"Model":"@range({minimumNumber:6  ,maximumNumber:8  ,conditionalExpression:(x,y) => x.age >= 25  }) \r\nprojectDuration: number;","Json":null},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> datatype."],"Component":null,"Html":null,"Model":"@range({minimumNumber:2  ,maximumNumber:20  ,conditionalExpression:'x => x.age >=25' }) \r\nexperience: number;","Json":null},"messageExample":{"Notes":null,"Component":null,"Html":null,"Model":"@range({minimumNumber:1000  ,maximumNumber:200000  ,message:'Your Salary should be between 10000 to 200000.' }) \r\nsalary: number;","Json":null},"complete":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-range-complete',\r\n    templateUrl: './range-complete.component.html'\r\n})\r\nexport class RangeCompleteComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Project Duration' or 'Employee Experience', then you need to add 'Employee Age' input greater than 25<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Project Duration</label>\r\n      <input type=\"text\" formControlName=\"projectDuration\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If Your age is above 25 your Project Duration should be between 6 to 8 months.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Age' will be greater than 25.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.projectDuration.errors\">{{employeeInfoFormGroup.controls.projectDuration.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Employee Experience</label>\r\n      <input type=\"text\" formControlName=\"experience\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If Your age is above 25 your minimum experience should be between 2 to 20.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Age' will be greater than 25.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.experience.errors\">{{employeeInfoFormGroup.controls.experience.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Salary</label>\r\n      <input type=\"text\" formControlName=\"salary\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">Please enter salary between 1000 to 200000<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.salary.errors\">{{employeeInfoFormGroup.controls.salary.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  range,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@range({minimumNumber:18  ,maximumNumber:60 }) \r\n\tage: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@range({minimumNumber:6  ,maximumNumber:8  ,conditionalExpression:(x,y) => x.age >= 25  }) \r\n\tprojectDuration: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@range({minimumNumber:2  ,maximumNumber:20  ,conditionalExpression:'x => x.age >=25' }) \r\n\texperience: number;\r\n\r\n\t@range({minimumNumber:1000  ,maximumNumber:200000  ,message:'Your Salary should be between 10000 to 200000.' }) \r\n\tsalary: number;\r\n\r\n}\r\n","Json":null},"minimumNumber":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-range-minimumNumber',\r\n    templateUrl: './range-minimum-number.component.html'\r\n})\r\nexport class RangeMinimumNumberComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Project Duration' or 'Employee Experience', then you need to add 'Employee Age' input greater than 25<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  range,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@range({minimumNumber:18  ,maximumNumber:60 }) \r\n\tage: number;\r\n\r\n}\r\n","Json":null},"maximumNumber":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-range-maximumNumber',\r\n    templateUrl: './range-maximum-number.component.html'\r\n})\r\nexport class RangeMaximumNumberComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Project Duration' or 'Employee Experience', then you need to add 'Employee Age' input greater than 25<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  range,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@range({minimumNumber:18  ,maximumNumber:60 }) \r\n\tage: number;\r\n\r\n}\r\n","Json":null},"conditionalExpression":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-range-conditionalExpression',\r\n    templateUrl: './range-conditional-expression.component.html'\r\n})\r\nexport class RangeConditionalExpressionComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Project Duration' or 'Employee Experience', then you need to add 'Employee Age' input greater than 25<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Employee Experience</label>\r\n      <input type=\"text\" formControlName=\"experience\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If Your age is above 25 your minimum experience should be between 2 to 20.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Age' will be greater than 25.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.experience.errors\">{{employeeInfoFormGroup.controls.experience.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Project Duration</label>\r\n      <input type=\"text\" formControlName=\"projectDuration\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If Your age is above 25 your Project Duration should be between 6 to 8 months.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Age' will be greater than 25.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.projectDuration.errors\">{{employeeInfoFormGroup.controls.projectDuration.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  range,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@range({minimumNumber:18  ,maximumNumber:60 }) \r\n\tage: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@range({minimumNumber:2  ,maximumNumber:20  ,conditionalExpression:'x => x.age >=25' }) \r\n\texperience: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@range({minimumNumber:6  ,maximumNumber:8  ,conditionalExpression:(x,y) => x.age >= 25  }) \r\n\tprojectDuration: number;\r\n\r\n}\r\n","Json":null},"message":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-range-message',\r\n    templateUrl: './range-message.component.html'\r\n})\r\nexport class RangeMessageComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Salary</label>\r\n      <input type=\"text\" formControlName=\"salary\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">Please enter salary between 1000 to 200000<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.salary.errors\">{{employeeInfoFormGroup.controls.salary.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  range,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@range({minimumNumber:1000  ,maximumNumber:200000  ,message:'Your Salary should be between 10000 to 200000.' }) \r\n\tsalary: number;\r\n\r\n}\r\n","Json":null},"dynamic":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-range-dynamic',\r\n    templateUrl: './range-dynamic.component.html'\r\n})\r\nexport class RangeDynamicComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/range/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  *ngIf=\"employeeInfoFormGroup\"  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Age Should be between 18 to 60.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Project Duration' or 'Employee Experience', then you need to add 'Employee Age' input greater than 25<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Employee Experience</label>\r\n      <input type=\"text\" formControlName=\"experience\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If Your age is above 25 your minimum experience should be between 2 to 20.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Age' will be greater than 25.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.experience.errors\">{{employeeInfoFormGroup.controls.experience.errors.range.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Salary</label>\r\n      <input type=\"text\" formControlName=\"salary\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">Please enter salary between 1000 to 200000<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.salary.errors\">{{employeeInfoFormGroup.controls.salary.errors.range.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  range,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@prop()\r\n\tage: number;\r\n\r\n\t@prop()\r\n\texperience: number;\r\n\r\n\t@prop()\r\n\tsalary: number;\r\n\r\n}\r\n","Json":"{\"age\":{\"minimumNumber\":\"18\",\"maximumNumber\":\"60\"},\"experience\":{\"minimumNumber\":\"2\",\"maximumNumber\":\"20\",\"conditionalExpression\":\"'x => x.age >=25'\"},\"salary\":{\"minimumNumber\":\"1000\",\"maximumNumber\":\"200000\",\"message\":\"'Your Salary should be between 10000 to 200000.'\"}}"},"add":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-range-add',\r\n    templateUrl: './range-add.component.html'\r\n})\r\nexport class RangeAddComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let employeeInfo = new EmployeeInfo();\r\n        this.employeeInfoFormGroup = this.formBuilder.formGroup(employeeInfo);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Please enter Employee Age between 18 to 60<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  range,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@range({minimumNumber:18  ,maximumNumber:60 }) \r\n\tage: number;\r\n\r\n}\r\n","Json":null},"edit":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { EmployeeInfo } from './employee-info.model';\r\n\r\n@Component({\r\n    selector: 'app-range-edit',\r\n    templateUrl: './range-edit.component.html'\r\n})\r\nexport class RangeEditComponent implements OnInit {\r\n    employeeInfoFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/range/edit/employee-info-data.json').subscribe(employeeInfo => {\r\n            this.employeeInfoFormGroup = this.formBuilder.formGroup<EmployeeInfo>(EmployeeInfo,employeeInfo);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  *ngIf=\"employeeInfoFormGroup\"  [formGroup]=\"employeeInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Employee Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Please enter Employee Age between 18 to 60<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"employeeInfoFormGroup.controls.age.errors\">{{employeeInfoFormGroup.controls.age.errors.range.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!employeeInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  range,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class EmployeeInfo {\r\n\r\n\t@range({minimumNumber:18  ,maximumNumber:60 }) \r\n\tage: number;\r\n\r\n}\r\n","Json":"{\"age\":\"26\"}"}}