{"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>Function</span> object."],"Component":null,"Html":null,"Model":"@url({conditionalExpression:(x,y) => x.adminWebsiteUrl == \"https://google.co.in\"  }) \r\nqaWebsiteUrl: string;","Json":null},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression</span> with <span class='highlighted'>string</span> datatype."],"Component":null,"Html":null,"Model":"@url({conditionalExpression:'x => x.adminWebsiteUrl == \"https://google.co.in\"'  }) \r\ncustomerWebsiteUrl: string;","Json":null},"messageExample":{"Notes":null,"Component":null,"Html":null,"Model":"@url({message:'Is not the correct url pattern.' }) \r\nmaintenanceWebSiteUrl: string;","Json":null},"complete":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-url-complete',\r\n    templateUrl: './url-complete.component.html'\r\n})\r\nexport class UrlCompleteComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' or 'Customer Website Url', then you need to add 'Admin Website Url' input as 'https://google.co.in'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.adminWebsiteUrl.errors\">{{userFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>QA Website Url</label>\r\n      <input type=\"text\" formControlName=\"qaWebsiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' then you need to add 'admin Website Url' input as 'https://google.co.in'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.qaWebsiteUrl.errors\">{{userFormGroup.controls.qaWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Customer Website Url</label>\r\n      <input type=\"text\" formControlName=\"customerWebsiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter 'https://google.co.in' in Admin Website Url textbox above for apply validation<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.customerWebsiteUrl.errors\">{{userFormGroup.controls.customerWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n      <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  url,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@url() \r\n\tadminWebsiteUrl: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@url({conditionalExpression:(x,y) => x.adminWebsiteUrl == \"https://google.co.in\"  }) \r\n\tqaWebsiteUrl: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\t@url({conditionalExpression:'x => x.adminWebsiteUrl == \"https://google.co.in\"'  }) \r\n\tcustomerWebsiteUrl: string;\r\n\r\n\t@url({message:'Is not the correct url pattern.' }) \r\n\tmaintenanceWebSiteUrl: string;\r\n\r\n}\r\n","Json":null},"conditionalExpression":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-url-conditionalExpression',\r\n    templateUrl: './url-conditional-expression.component.html'\r\n})\r\nexport class UrlConditionalExpressionComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' or 'Customer Website Url', then you need to add 'Admin Website Url' input as 'https://google.co.in'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.adminWebsiteUrl.errors\">{{userFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>QA Website Url</label>\r\n      <input type=\"text\" formControlName=\"qaWebsiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' then you need to add 'admin Website Url' input as 'https://google.co.in'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.qaWebsiteUrl.errors\">{{userFormGroup.controls.qaWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  url,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@url() \r\n\tadminWebsiteUrl: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\t@url({conditionalExpression:(x,y) => x.adminWebsiteUrl == \"https://google.co.in\"  }) \r\n\tqaWebsiteUrl: string;\r\n\r\n}\r\n","Json":null},"message":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-url-message',\r\n    templateUrl: './url-message.component.html'\r\n})\r\nexport class UrlMessageComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        this.userFormGroup = this.formBuilder.formGroup(user);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n      <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  url,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@url({message:'Is not the correct url pattern.' }) \r\n\tmaintenanceWebSiteUrl: string;\r\n\r\n}\r\n","Json":null},"dynamic":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\nimport { FormBuilderConfiguration,} from '@rxweb/reactive-form-validators';\r\n\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-url-dynamic',\r\n    templateUrl: './url-dynamic.component.html'\r\n})\r\nexport class UrlDynamicComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        let user = new User();\r\n        let formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/decorators/url/dynamic/dynamic.json').subscribe(dynamic => {\r\n            formBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tthis.userFormGroup = this.formBuilder.formGroup(user,formBuilderConfiguration);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'QA Website Url' or 'Customer Website Url', then you need to add 'Admin Website Url' input as 'https://google.co.in'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.adminWebsiteUrl.errors\">{{userFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Customer Website Url</label>\r\n      <input type=\"text\" formControlName=\"customerWebsiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Enter 'https://google.co.in' in Admin Website Url textbox above for apply validation<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.customerWebsiteUrl.errors\">{{userFormGroup.controls.customerWebsiteUrl.errors.url.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maintenance Website Url</label>\r\n      <input type=\"text\" formControlName=\"maintenanceWebSiteUrl\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.maintenanceWebSiteUrl.errors\">{{userFormGroup.controls.maintenanceWebSiteUrl.errors.url.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  url,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\t@prop()\r\n\tadminWebsiteUrl: string;\r\n\r\n\t@prop()\r\n\tcustomerWebsiteUrl: string;\r\n\r\n\t@prop()\r\n\tmaintenanceWebSiteUrl: string;\r\n\r\n}\r\n","Json":"{\"adminWebsiteUrl\":{\"url\":true},\"customerWebsiteUrl\":{\"conditionalExpression\":\"'x => x.adminWebsiteUrl == \\\"https://google.co.in\\\"' \"},\"maintenanceWebSiteUrl\":{\"message\":\"'Is not the correct url pattern.'\"}}"},"add":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { WebSiteInfoModel } from './web-site-info-model.model';\r\n\r\n@Component({\r\n    selector: 'app-url-add',\r\n    templateUrl: './url-add.component.html'\r\n})\r\nexport class UrlAddComponent implements OnInit {\r\n    webSiteInfoModelFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder    ) { }\r\n\r\n    ngOnInit() {\r\n        let webSiteInfoModel = new WebSiteInfoModel();\r\n        this.webSiteInfoModelFormGroup = this.formBuilder.formGroup(webSiteInfoModel);\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"webSiteInfoModelFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors\">{{webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!webSiteInfoModelFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  url,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class WebSiteInfoModel {\r\n\r\n\t@url() \r\n\tadminWebsiteUrl: string;\r\n\r\n}\r\n","Json":null},"edit":{"Notes":null,"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup } from \"@angular/forms\"\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { RxFormBuilder } from '@rxweb/reactive-form-validators';\r\n\r\nimport { WebSiteInfoModel } from './web-site-info-model.model';\r\n\r\n@Component({\r\n    selector: 'app-url-edit',\r\n    templateUrl: './url-edit.component.html'\r\n})\r\nexport class UrlEditComponent implements OnInit {\r\n    webSiteInfoModelFormGroup: FormGroup\r\n\r\n    constructor(\r\n        private formBuilder: RxFormBuilder,private http: HttpClient    ) { }\r\n\r\n    ngOnInit() {\r\n        this.http.get('assets/examples/reactive-form-validators/decorators/url/edit/web-site-info-model-data.json').subscribe(webSiteInfoModel => {\r\n            this.webSiteInfoModelFormGroup = this.formBuilder.formGroup<WebSiteInfoModel>(WebSiteInfoModel,webSiteInfoModel);\r\n        })\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  *ngIf=\"webSiteInfoModelFormGroup\"  [formGroup]=\"webSiteInfoModelFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Admin Website Url</label>\r\n      <input type=\"text\" formControlName=\"adminWebsiteUrl\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors\">{{webSiteInfoModelFormGroup.controls.adminWebsiteUrl.errors.url.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!webSiteInfoModelFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  url,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class WebSiteInfoModel {\r\n\r\n\t@url() \r\n\tadminWebsiteUrl: string;\r\n\r\n}\r\n","Json":"{\"adminWebsiteUrl\":\"https://google.co.in\"}"}}