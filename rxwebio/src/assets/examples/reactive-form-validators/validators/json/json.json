{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-json-complete-validator',\r\n    templateUrl: './json-complete.component.html'\r\n})\r\nexport class JsonCompleteValidatorComponent implements OnInit {\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.jsonInfoFormGroup = this.formBuilder.group({\r\n            location:['',], \r\n            addressJson:['', RxwebValidators.json({conditionalExpression:(x,y)=> x.location == \"{CountryName:India}\"  })], \r\n            locationJson:['', RxwebValidators.json({conditionalExpression:'x => x.location == \"{CountryName:India}\"'  ,message:'Enter the text in JSON format --> {key:value}' })], \r\n            contactJson:['', RxwebValidators.json({message:'Enter only JSON type data' })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"jsonInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Location</label>\r\n      <input type=\"text\" formControlName=\"location\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">'To apply the validation of JSON on 'addressJson' or 'locationJson' field, then enter the value of location is &#123;CountryName:India&#125; in Location textbox.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.location.errors\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Address Json</label>\r\n      <input type=\"text\" formControlName=\"addressJson\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Address Json' then you need to add 'Location' input as&#123;CountryName:India&#125;.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.addressJson.errors\">{{jsonInfoFormGroup.controls.addressJson.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Location Json</label>\r\n      <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Location Json' then you need to add 'Location' input as &#123;CountryName:India&#125;.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact Json</label>\r\n      <input type=\"text\" formControlName=\"contactJson\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.contactJson.errors\">{{jsonInfoFormGroup.controls.contactJson.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":null},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-json-message-validator',\r\n    templateUrl: './json-message.component.html'\r\n})\r\nexport class JsonMessageValidatorComponent implements OnInit {\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.jsonInfoFormGroup = this.formBuilder.group({\r\n            location:['',], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"jsonInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Location</label>\r\n      <input type=\"text\" formControlName=\"location\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">'To apply the validation of JSON on 'addressJson' or 'locationJson' field, then enter the value of location is &#123;CountryName:India&#125; in Location textbox.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.location.errors\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-json-conditionalExpression-validator',\r\n    templateUrl: './json-conditional-expression.component.html'\r\n})\r\nexport class JsonConditionalExpressionValidatorComponent implements OnInit {\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.jsonInfoFormGroup = this.formBuilder.group({\r\n            location:['',], \r\n            locationJson:['', RxwebValidators.json({conditionalExpression:'x => x.location == \"{CountryName:India}\"'  ,message:'Enter the text in JSON format --> {key:value}' })], \r\n            addressJson:['', RxwebValidators.json({conditionalExpression:(x,y)=> x.location == \"{CountryName:India}\"  })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"jsonInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Location</label>\r\n      <input type=\"text\" formControlName=\"location\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">'To apply the validation of JSON on 'addressJson' or 'locationJson' field, then enter the value of location is &#123;CountryName:India&#125; in Location textbox.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.location.errors\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Location Json</label>\r\n      <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Location Json' then you need to add 'Location' input as &#123;CountryName:India&#125;.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Address Json</label>\r\n      <input type=\"text\" formControlName=\"addressJson\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Address Json' then you need to add 'Location' input as&#123;CountryName:India&#125;.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.addressJson.errors\">{{jsonInfoFormGroup.controls.addressJson.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":null},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> string</span> object."],"Component":null,"Html":null,"Model":"            locationJson:['', RxwebValidators.json({conditionalExpression:'x => x.location == \"{CountryName:India}\"'  ,message:'Enter the text in JSON format --> {key:value}' })], ","Json":null},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> Function</span> object."],"Component":null,"Html":null,"Model":"            addressJson:['', RxwebValidators.json({conditionalExpression:(x,y)=> x.location == \"{CountryName:India}\"  })], ","Json":null},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-json-dynamic-validator',\r\n    templateUrl: './json-dynamic.component.html'\r\n})\r\nexport class JsonDynamicValidatorComponent implements OnInit {\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/json/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar jsonInfo = { location:'', addressJson:'', locationJson:'', contactJson:'',  }\r\n\t\t\tthis.jsonInfoFormGroup = this.formBuilder.group(jsonInfo,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  *ngIf=\"jsonInfoFormGroup\"  [formGroup]=\"jsonInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Location</label>\r\n      <input type=\"text\" formControlName=\"location\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">'To apply the validation of JSON on 'addressJson' or 'locationJson' field, then enter the value of location is &#123;CountryName:India&#125; in Location textbox.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.location.errors\">{{jsonInfoFormGroup.controls.location.errors.json.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Location Json</label>\r\n      <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Location Json' then you need to add 'Location' input as &#123;CountryName:India&#125;.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Contact Json</label>\r\n      <input type=\"text\" formControlName=\"contactJson\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.contactJson.errors\">{{jsonInfoFormGroup.controls.contactJson.errors.json.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":"{\"location\":{\"message\":\"'Enter the text in JSON format --> {key:value}'\"},\"locationJson\":{\"conditionalExpression\":\"'x => x.location == \\\"{CountryName:India}\\\"'\",\"message\":\"'Enter the text in JSON format --> {key:value}'\"},\"contactJson\":{\"message\":\"'Enter only JSON type data'\"}}"},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-json-add-validator',\r\n    templateUrl: './json-add.component.html'\r\n})\r\nexport class JsonAddValidatorComponent implements OnInit {\r\n    jsonInfoFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.jsonInfoFormGroup = this.formBuilder.group({\r\n            locationJson:['', RxwebValidators.json()], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"jsonInfoFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Location Json</label>\r\n      <input type=\"text\" formControlName=\"locationJson\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"jsonInfoFormGroup.controls.locationJson.errors\">{{jsonInfoFormGroup.controls.locationJson.errors.json.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!jsonInfoFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":null}}