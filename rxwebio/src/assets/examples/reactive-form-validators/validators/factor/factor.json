{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-factor-complete-validator',\r\n    templateUrl: './factor-complete.component.html'\r\n})\r\nexport class FactorCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            firstNumber:['',], \r\n            fifthNumber:['', RxwebValidators.factor({fieldName:\"firstNumber\" })], \r\n            secondNumber:['', RxwebValidators.factor({fieldName:\"firstNumber\"  ,conditionalExpression:(x,y) =>x.firstNumber == 25  })], \r\n            thirdNumber:['', RxwebValidators.factor({fieldName:\"firstNumber\"  ,conditionalExpression:'x => x.firstNumber == 25' })], \r\n            fourthNumber:['', RxwebValidators.factor({dividend:50  ,message:'{{0}} is not a factor of 50' })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n      <input type=\"text\" formControlName=\"firstNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Number' or 'Third Number', then you need to add 'First Number' input as '25'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstNumber.errors\">{{userFormGroup.controls.firstNumber.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fifth Number</label>\r\n      <input type=\"text\" formControlName=\"fifthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fifth Number' field<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fifthNumber.errors\">{{userFormGroup.controls.fifthNumber.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Second Number</label>\r\n      <input type=\"text\" formControlName=\"secondNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fourth Number' field, then enter the value '25' in 'First Number' textbox<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.secondNumber.errors\">{{userFormGroup.controls.secondNumber.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Number</label>\r\n      <input type=\"text\" formControlName=\"thirdNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fourth Number' field, then enter the value '25' in 'First Number' textbox<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.thirdNumber.errors\">{{userFormGroup.controls.thirdNumber.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fourth Number</label>\r\n      <input type=\"text\" formControlName=\"fourthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fourthNumber.errors\">{{userFormGroup.controls.fourthNumber.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":null},"fieldName":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-factor-fieldName-validator',\r\n    templateUrl: './factor-field-name.component.html'\r\n})\r\nexport class FactorFieldNameValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            firstNumber:['',], \r\n            thirdNumber:['', RxwebValidators.factor({fieldName:\"firstNumber\"  ,conditionalExpression:'x => x.firstNumber == 25' })], \r\n            fifthNumber:['', RxwebValidators.factor({fieldName:\"firstNumber\" })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n      <input type=\"text\" formControlName=\"firstNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Number' or 'Third Number', then you need to add 'First Number' input as '25'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstNumber.errors\">{{userFormGroup.controls.firstNumber.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Number</label>\r\n      <input type=\"text\" formControlName=\"thirdNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fourth Number' field, then enter the value '25' in 'First Number' textbox<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.thirdNumber.errors\">{{userFormGroup.controls.thirdNumber.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fifth Number</label>\r\n      <input type=\"text\" formControlName=\"fifthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fifth Number' field<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fifthNumber.errors\">{{userFormGroup.controls.fifthNumber.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":null},"fieldNameExample":{"Notes":[],"Component":"","Html":"","Model":"            thirdNumber:['', RxwebValidators.factor({fieldName:\"firstNumber\"  ,conditionalExpression:'x => x.firstNumber == 25' })], ","Json":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-factor-conditionalExpression-validator',\r\n    templateUrl: './factor-conditional-expression.component.html'\r\n})\r\nexport class FactorConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            firstNumber:['',], \r\n            thirdNumber:['', RxwebValidators.factor({fieldName:\"firstNumber\"  ,conditionalExpression:'x => x.firstNumber == 25' })], \r\n            secondNumber:['', RxwebValidators.factor({fieldName:\"firstNumber\"  ,conditionalExpression:(x,y) =>x.firstNumber == 25  })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n      <input type=\"text\" formControlName=\"firstNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Number' or 'Third Number', then you need to add 'First Number' input as '25'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstNumber.errors\">{{userFormGroup.controls.firstNumber.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Number</label>\r\n      <input type=\"text\" formControlName=\"thirdNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fourth Number' field, then enter the value '25' in 'First Number' textbox<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.thirdNumber.errors\">{{userFormGroup.controls.thirdNumber.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Second Number</label>\r\n      <input type=\"text\" formControlName=\"secondNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fourth Number' field, then enter the value '25' in 'First Number' textbox<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.secondNumber.errors\">{{userFormGroup.controls.secondNumber.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":null},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> string</span> object."],"Component":null,"Html":null,"Model":"            thirdNumber:['', RxwebValidators.factor({fieldName:\"firstNumber\"  ,conditionalExpression:'x => x.firstNumber == 25' })], ","Json":null},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> Function</span> object."],"Component":null,"Html":null,"Model":"            secondNumber:['', RxwebValidators.factor({fieldName:\"firstNumber\"  ,conditionalExpression:(x,y) =>x.firstNumber == 25  })], ","Json":null},"dividend":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-factor-dividend-validator',\r\n    templateUrl: './factor-dividend.component.html'\r\n})\r\nexport class FactorDividendValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            fourthNumber:['', RxwebValidators.factor({dividend:50  ,message:'{{0}} is not a factor of 50' })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Fourth Number</label>\r\n      <input type=\"text\" formControlName=\"fourthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fourthNumber.errors\">{{userFormGroup.controls.fourthNumber.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":null},"dividendExample":{"Notes":[],"Component":"","Html":"","Model":"            fourthNumber:['', RxwebValidators.factor({dividend:50  ,message:'{{0}} is not a factor of 50' })], ","Json":null},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-factor-message-validator',\r\n    templateUrl: './factor-message.component.html'\r\n})\r\nexport class FactorMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            fourthNumber:['', RxwebValidators.factor({dividend:50  ,message:'{{0}} is not a factor of 50' })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Fourth Number</label>\r\n      <input type=\"text\" formControlName=\"fourthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fourthNumber.errors\">{{userFormGroup.controls.fourthNumber.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"            fourthNumber:['', RxwebValidators.factor({dividend:50  ,message:'{{0}} is not a factor of 50' })], ","Json":null},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-factor-dynamic-validator',\r\n    templateUrl: './factor-dynamic.component.html'\r\n})\r\nexport class FactorDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/factor/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar user = { firstNumber:'', fifthNumber:'', secondNumber:'', thirdNumber:'', fourthNumber:'',  }\r\n\t\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n      <input type=\"text\" formControlName=\"firstNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Number' or 'Third Number', then you need to add 'First Number' input as '25'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstNumber.errors\">{{userFormGroup.controls.firstNumber.errors.factor.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fifth Number</label>\r\n      <input type=\"text\" formControlName=\"fifthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fifth Number' field<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fifthNumber.errors\">{{userFormGroup.controls.fifthNumber.errors.factor.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Number</label>\r\n      <input type=\"text\" formControlName=\"thirdNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">To apply the validation of factor on 'Fourth Number' field, then enter the value '25' in 'First Number' textbox<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.thirdNumber.errors\">{{userFormGroup.controls.thirdNumber.errors.factor.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fourth Number</label>\r\n      <input type=\"text\" formControlName=\"fourthNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">you can enter only factors of 50<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.fourthNumber.errors\">{{userFormGroup.controls.fourthNumber.errors.factor.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":"{\"firstNumber\":{\"factor\":true},\"fifthNumber\":{\"fieldName\":\"\\\"firstNumber\\\"\"},\"thirdNumber\":{\"fieldName\":\"\\\"firstNumber\\\"\",\"conditionalExpression\":\"'x => x.firstNumber == 25'\"},\"fourthNumber\":{\"dividend\":\"50\",\"message\":\"'{{0}} is not a factor of 50'\"}}"},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-factor-add-validator',\r\n    templateUrl: './factor-add.component.html'\r\n})\r\nexport class FactorAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            firstNumber:['', RxwebValidators.factor({dividend:50 })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>First Number</label>\r\n      <input type=\"text\" formControlName=\"firstNumber\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">You can only enter factors of 50<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.firstNumber.errors\">{{userFormGroup.controls.firstNumber.errors.factor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":null}}