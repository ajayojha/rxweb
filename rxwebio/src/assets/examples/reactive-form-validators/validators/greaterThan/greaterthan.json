{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-complete-validator',\r\n    templateUrl: './greater-than-complete.component.html'\r\n})\r\nexport class GreaterThanCompleteValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            age:['',], \r\n            memberAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:(x,y) => x.age > 17  })], \r\n            voterAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' })], \r\n            otherAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,message:'Please enter number greater than 0.' })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' or 'Member Age' then need to add this input greater than '17'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Member Age</label>\r\n      <input type=\"text\" formControlName=\"memberAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.memberAge.errors\">{{userFormGroup.controls.memberAge.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Voter Age</label>\r\n      <input type=\"text\" formControlName=\"voterAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.voterAge.errors\">{{userFormGroup.controls.voterAge.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Age</label>\r\n      <input type=\"text\" formControlName=\"otherAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherAge.errors\">{{userFormGroup.controls.otherAge.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":null},"fieldName":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-fieldName-validator',\r\n    templateUrl: './greater-than-field-name.component.html'\r\n})\r\nexport class GreaterThanFieldNameValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            age:['',], \r\n            voterAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' })], \r\n            memberAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:(x,y) => x.age > 17  })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' or 'Member Age' then need to add this input greater than '17'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Voter Age</label>\r\n      <input type=\"text\" formControlName=\"voterAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.voterAge.errors\">{{userFormGroup.controls.voterAge.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Member Age</label>\r\n      <input type=\"text\" formControlName=\"memberAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.memberAge.errors\">{{userFormGroup.controls.memberAge.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":null},"fieldNameExample":{"Notes":[],"Component":"","Html":"","Model":"            voterAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' })], ","Json":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-conditionalExpression-validator',\r\n    templateUrl: './greater-than-conditional-expression.component.html'\r\n})\r\nexport class GreaterThanConditionalExpressionValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            age:['',], \r\n            voterAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' })], \r\n            memberAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:(x,y) => x.age > 17  })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' or 'Member Age' then need to add this input greater than '17'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Voter Age</label>\r\n      <input type=\"text\" formControlName=\"voterAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.voterAge.errors\">{{userFormGroup.controls.voterAge.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Member Age</label>\r\n      <input type=\"text\" formControlName=\"memberAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.memberAge.errors\">{{userFormGroup.controls.memberAge.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":null},"conditionalExpressionExampleString":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> string</span> object."],"Component":null,"Html":null,"Model":"            voterAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' })], ","Json":null},"conditionalExpressionExampleFunction":{"Notes":["Binding <span class='highlighted'>conditionalExpression </span> with <span class='highlighted'> Function</span> object."],"Component":null,"Html":null,"Model":"            memberAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:(x,y) => x.age > 17  })], ","Json":null},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-message-validator',\r\n    templateUrl: './greater-than-message.component.html'\r\n})\r\nexport class GreaterThanMessageValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            age:['',], \r\n            voterAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,conditionalExpression:'x => x.age > 17' })], \r\n            otherAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,message:'Please enter number greater than 0.' })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' or 'Member Age' then need to add this input greater than '17'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Voter Age</label>\r\n      <input type=\"text\" formControlName=\"voterAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.voterAge.errors\">{{userFormGroup.controls.voterAge.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Age</label>\r\n      <input type=\"text\" formControlName=\"otherAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherAge.errors\">{{userFormGroup.controls.otherAge.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":null},"messageExample":{"Notes":[],"Component":"","Html":"","Model":"            otherAge:['', RxwebValidators.greaterThan({fieldName:'age'  ,message:'Please enter number greater than 0.' })], ","Json":null},"dynamic":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { FormBuilderConfiguration} from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-dynamic-validator',\r\n    templateUrl: './greater-than-dynamic.component.html'\r\n})\r\nexport class GreaterThanDynamicValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder , private http: HttpClient )\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n\t\tlet formBuilderConfiguration = new FormBuilderConfiguration();\r\n\t\tthis.http.get('assets/examples/reactive-form-validators/validators/greaterThan/dynamic/dynamic.json').subscribe(dynamic => {\r\n\t\t\tformBuilderConfiguration.dynamicValidation = JSON.parse(JSON.stringify(dynamic));\r\n\t\t\tvar user = { age:'', memberAge:'', voterAge:'', otherAge:'',  }\r\n\t\t\tthis.userFormGroup = this.formBuilder.group(user,formBuilderConfiguration);\r\n\t\t})\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  *ngIf=\"userFormGroup\"  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' or 'Member Age' then need to add this input greater than '17'.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Voter Age</label>\r\n      <input type=\"text\" formControlName=\"voterAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Voter Age' then need to add 'Age' field greater than '17'.<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.voterAge.errors\">{{userFormGroup.controls.voterAge.errors.greaterThan.message}}<br/></small>\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Other Age</label>\r\n      <input type=\"text\" formControlName=\"otherAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n      <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.otherAge.errors\">{{userFormGroup.controls.otherAge.errors.greaterThan.message}}<br/></small>\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":"{\"age\":{\"greaterThan\":true},\"voterAge\":{\"fieldName\":\"'age'\",\"conditionalExpression\":\"'x => x.age > 17'\"},\"otherAge\":{\"fieldName\":\"'age'\",\"message\":\"'Please enter number greater than 0.'\"}}"},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\"\r\nimport { RxwebValidators } from '@rxweb/reactive-form-validators';\r\n\r\n@Component({\r\n    selector: 'app-greaterThan-add-validator',\r\n    templateUrl: './greater-than-add.component.html'\r\n})\r\nexport class GreaterThanAddValidatorComponent implements OnInit {\r\n    userFormGroup: FormGroup\r\n\r\n\tconstructor(\r\n        private formBuilder: FormBuilder)\r\n\t{ }\r\n\r\n    ngOnInit() {\r\n        this.userFormGroup = this.formBuilder.group({\r\n            age:['',], \r\n            voterAge:['', RxwebValidators.greaterThan({fieldName:'age' })], \r\n        });\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form  [formGroup]=\"userFormGroup\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" formControlName=\"age\" class=\"form-control\"  />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.age.errors\">{{userFormGroup.controls.age.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Voter Age</label>\r\n      <input type=\"text\" formControlName=\"voterAge\" class=\"form-control\"  />\r\n      <small class=\"form-text text-muted\">This is checking greater than validation for  Voter Age must be greater than to age.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userFormGroup.controls.voterAge.errors\">{{userFormGroup.controls.voterAge.errors.greaterThan.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userFormGroup.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":null,"Json":null}}