{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { HexcolorInfo } from './hexcolor-info.model';\r\n\r\n@Component({\r\n    selector: 'app-hexColor-complete-template-driven',\r\n    templateUrl: './hex-color-complete.component.html'\r\n})\r\nexport class HexColorCompleteTemplateDrivenComponent implements OnInit {\r\n    hexcolorinfo: HexcolorInfo\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.hexcolorinfo= new HexcolorInfo()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #hexcolorinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Color Picker</label>\r\n      <input type=\"text\" name=\"color\" [(ngModel)]=\"hexcolorinfo.color\"  class=\"form-control\"  hexColor />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Footer Hexcode' or 'Header Hexcode', then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorinfoForm.controls.color?.errors\">{{hexcolorinfoForm.controls.color?.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Footer Hexcode</label>\r\n      <input type=\"text\" name=\"footerHexCode\" [(ngModel)]=\"hexcolorinfo.footerHexCode\"  class=\"form-control\"  [hexColor]=\"{'conditionalExpression':(x,y) =>x.color == '#AFAFAF'}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation of hex color validation on 'Footer Hexcode' then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorinfoForm.controls.footerHexCode?.errors\">{{hexcolorinfoForm.controls.footerHexCode?.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Header Hexcode</label>\r\n      <input type=\"text\" name=\"headerHexcolorCode\" [(ngModel)]=\"hexcolorinfo.headerHexcolorCode\"  class=\"form-control\"  [hexColor]=\"{'conditionalExpression':'x => x.color == '#AFAFAF''}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Header Hexcode' then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorinfoForm.controls.headerHexcolorCode?.errors\">{{hexcolorinfoForm.controls.headerHexcolorCode?.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Body Hexcode</label>\r\n      <input type=\"text\" name=\"bodyHexcolorCode\" [(ngModel)]=\"hexcolorinfo.bodyHexcolorCode\"  class=\"form-control\"  [hexColor]=\"{'message':'Please enter the right format of hexcode for body like '#AFAFAF''}\" />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorinfoForm.controls.bodyHexcolorCode?.errors\">{{hexcolorinfoForm.controls.bodyHexcolorCode?.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!hexcolorinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  hexColor,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class HexcolorInfo {\r\n\r\n\tcolor: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tfooterHexCode: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\theaderHexcolorCode: string;\r\n\r\n\tbodyHexcolorCode: string;\r\n\r\n}\r\n","Json":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { HexcolorInfo } from './hexcolor-info.model';\r\n\r\n@Component({\r\n    selector: 'app-hexColor-conditionalExpression-template-driven',\r\n    templateUrl: './hex-color-conditional-expression.component.html'\r\n})\r\nexport class HexColorConditionalExpressionTemplateDrivenComponent implements OnInit {\r\n    hexcolorinfo: HexcolorInfo\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.hexcolorinfo= new HexcolorInfo()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #hexcolorinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Color Picker</label>\r\n      <input type=\"text\" name=\"color\" [(ngModel)]=\"hexcolorinfo.color\"  class=\"form-control\"  hexColor />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Footer Hexcode' or 'Header Hexcode', then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorinfoForm.controls.color?.errors\">{{hexcolorinfoForm.controls.color?.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Header Hexcode</label>\r\n      <input type=\"text\" name=\"headerHexcolorCode\" [(ngModel)]=\"hexcolorinfo.headerHexcolorCode\"  class=\"form-control\"  [hexColor]=\"{'conditionalExpression':'x => x.color == '#AFAFAF''}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Header Hexcode' then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorinfoForm.controls.headerHexcolorCode?.errors\">{{hexcolorinfoForm.controls.headerHexcolorCode?.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Footer Hexcode</label>\r\n      <input type=\"text\" name=\"footerHexCode\" [(ngModel)]=\"hexcolorinfo.footerHexCode\"  class=\"form-control\"  [hexColor]=\"{'conditionalExpression':(x,y) =>x.color == '#AFAFAF'}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation of hex color validation on 'Footer Hexcode' then you need to add 'Color Picker' input as '#AFAFAF'<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorinfoForm.controls.footerHexCode?.errors\">{{hexcolorinfoForm.controls.footerHexCode?.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!hexcolorinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  hexColor,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class HexcolorInfo {\r\n\r\n\tcolor: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\theaderHexcolorCode: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tfooterHexCode: string;\r\n\r\n}\r\n","Json":null},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { HexcolorInfo } from './hexcolor-info.model';\r\n\r\n@Component({\r\n    selector: 'app-hexColor-message-template-driven',\r\n    templateUrl: './hex-color-message.component.html'\r\n})\r\nexport class HexColorMessageTemplateDrivenComponent implements OnInit {\r\n    hexcolorinfo: HexcolorInfo\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.hexcolorinfo= new HexcolorInfo()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #hexcolorinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Body Hexcode</label>\r\n      <input type=\"text\" name=\"bodyHexcolorCode\" [(ngModel)]=\"hexcolorinfo.bodyHexcolorCode\"  class=\"form-control\"  [hexColor]=\"{'message':'Please enter the right format of hexcode for body like '#AFAFAF''}\" />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"hexcolorinfoForm.controls.bodyHexcolorCode?.errors\">{{hexcolorinfoForm.controls.bodyHexcolorCode?.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!hexcolorinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  hexColor,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class HexcolorInfo {\r\n\r\n\tbodyHexcolorCode: string;\r\n\r\n}\r\n","Json":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-hexColor-add-template-driven',\r\n    templateUrl: './hex-color-add.component.html'\r\n})\r\nexport class HexColorAddTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Color Picker</label>\r\n      <input type=\"text\" name=\"color\" [(ngModel)]=\"user.color\"  class=\"form-control\"  hexColor />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.color?.errors\">{{userForm.controls.color?.errors.hexColor.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  hexColor,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\tcolor: string;\r\n\r\n}\r\n","Json":null}}