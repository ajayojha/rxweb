{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-port-complete-template-driven',\r\n    templateUrl: './port-complete.component.html'\r\n})\r\nexport class PortCompleteTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Browser</label>\r\n      <input type=\"text\" name=\"browser\" [(ngModel)]=\"user.browser\"  class=\"form-control\"  port />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' or 'Shopping Website Port', then you need to add 'Browser' input as 'Chrome'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.browser?.errors\">{{userForm.controls.browser?.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entertainment Website Port</label>\r\n      <input type=\"text\" name=\"entertainmentWebsitePort\" [(ngModel)]=\"user.entertainmentWebsitePort\"  class=\"form-control\"  [port]=\"{'conditionalExpression':(x,y) => x.browser == 'Chrome' }\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.entertainmentWebsitePort?.errors\">{{userForm.controls.entertainmentWebsitePort?.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Shopping Website Port</label>\r\n      <input type=\"text\" name=\"shoppingWebsitePort\" [(ngModel)]=\"user.shoppingWebsitePort\"  class=\"form-control\"  [port]=\"{'conditionalExpression':'x => x.browser =='Chrome''}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Shopping Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.shoppingWebsitePort?.errors\">{{userForm.controls.shoppingWebsitePort?.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Educational Website Port</label>\r\n      <input type=\"text\" name=\"educationalWebsitePort\" [(ngModel)]=\"user.educationalWebsitePort\"  class=\"form-control\"  [port]=\"{'message':'{{0}} is not a proper port number'}\" />\r\n      <small class=\"form-text text-muted\">enter port number only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.educationalWebsitePort?.errors\">{{userForm.controls.educationalWebsitePort?.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  port,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\tbrowser: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tentertainmentWebsitePort: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\tshoppingWebsitePort: string;\r\n\r\n\teducationalWebsitePort: string;\r\n\r\n}\r\n","Json":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-port-conditionalExpression-template-driven',\r\n    templateUrl: './port-conditional-expression.component.html'\r\n})\r\nexport class PortConditionalExpressionTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Browser</label>\r\n      <input type=\"text\" name=\"browser\" [(ngModel)]=\"user.browser\"  class=\"form-control\"  port />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' or 'Shopping Website Port', then you need to add 'Browser' input as 'Chrome'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.browser?.errors\">{{userForm.controls.browser?.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Shopping Website Port</label>\r\n      <input type=\"text\" name=\"shoppingWebsitePort\" [(ngModel)]=\"user.shoppingWebsitePort\"  class=\"form-control\"  [port]=\"{'conditionalExpression':'x => x.browser =='Chrome''}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Shopping Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.shoppingWebsitePort?.errors\">{{userForm.controls.shoppingWebsitePort?.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Entertainment Website Port</label>\r\n      <input type=\"text\" name=\"entertainmentWebsitePort\" [(ngModel)]=\"user.entertainmentWebsitePort\"  class=\"form-control\"  [port]=\"{'conditionalExpression':(x,y) => x.browser == 'Chrome' }\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Entertainment Website Port' then you need to add 'Browser' input as 'Chrome'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.entertainmentWebsitePort?.errors\">{{userForm.controls.entertainmentWebsitePort?.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  port,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\tbrowser: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\tshoppingWebsitePort: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tentertainmentWebsitePort: string;\r\n\r\n}\r\n","Json":null},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-port-message-template-driven',\r\n    templateUrl: './port-message.component.html'\r\n})\r\nexport class PortMessageTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Educational Website Port</label>\r\n      <input type=\"text\" name=\"educationalWebsitePort\" [(ngModel)]=\"user.educationalWebsitePort\"  class=\"form-control\"  [port]=\"{'message':'{{0}} is not a proper port number'}\" />\r\n      <small class=\"form-text text-muted\">enter port number only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.educationalWebsitePort?.errors\">{{userForm.controls.educationalWebsitePort?.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  port,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\teducationalWebsitePort: string;\r\n\r\n}\r\n","Json":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-port-add-template-driven',\r\n    templateUrl: './port-add.component.html'\r\n})\r\nexport class PortAddTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Educational Website Port</label>\r\n      <input type=\"text\" name=\"educationalWebsitePort\" [(ngModel)]=\"user.educationalWebsitePort\"  class=\"form-control\"  port />\r\n      <small class=\"form-text text-muted\">You must enter a proper port number<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.educationalWebsitePort?.errors\">{{userForm.controls.educationalWebsitePort?.errors.port.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  port,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\teducationalWebsitePort: string;\r\n\r\n}\r\n","Json":null}}