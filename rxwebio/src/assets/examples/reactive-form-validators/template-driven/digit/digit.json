{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-digit-complete-template-driven',\r\n    templateUrl: './digit-complete.component.html'\r\n})\r\nexport class DigitCompleteTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" name=\"age\" [(ngModel)]=\"user.age\"  class=\"form-control\"  digit />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' or 'Fax Number' then you need to add this input greater than or equal to '25'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.age?.errors\">{{userForm.controls.age?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Phone Number</label>\r\n      <input type=\"text\" name=\"phoneNumber\" [(ngModel)]=\"user.phoneNumber\"  class=\"form-control\"  [digit]=\"{'conditionalExpression':(x,y) => x.age >= 25 }\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.phoneNumber?.errors\">{{userForm.controls.phoneNumber?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fax Number</label>\r\n      <input type=\"text\" name=\"faxNumber\" [(ngModel)]=\"user.faxNumber\"  class=\"form-control\"  [digit]=\"{'conditionalExpression':'x => x.age >=25'}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.faxNumber?.errors\">{{userForm.controls.faxNumber?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Mobile Number</label>\r\n      <input type=\"text\" name=\"mobileNumber\" [(ngModel)]=\"user.mobileNumber\"  class=\"form-control\"  [digit]=\"{'message':'Please enter only digit.'}\" />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.mobileNumber?.errors\">{{userForm.controls.mobileNumber?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  digit,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\tage: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tphoneNumber: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\tfaxNumber: number;\r\n\r\n\tmobileNumber: number;\r\n\r\n}\r\n","Json":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-digit-conditionalExpression-template-driven',\r\n    templateUrl: './digit-conditional-expression.component.html'\r\n})\r\nexport class DigitConditionalExpressionTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" name=\"age\" [(ngModel)]=\"user.age\"  class=\"form-control\"  digit />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' or 'Fax Number' then you need to add this input greater than or equal to '25'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.age?.errors\">{{userForm.controls.age?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Fax Number</label>\r\n      <input type=\"text\" name=\"faxNumber\" [(ngModel)]=\"user.faxNumber\"  class=\"form-control\"  [digit]=\"{'conditionalExpression':'x => x.age >=25'}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.faxNumber?.errors\">{{userForm.controls.faxNumber?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Phone Number</label>\r\n      <input type=\"text\" name=\"phoneNumber\" [(ngModel)]=\"user.phoneNumber\"  class=\"form-control\"  [digit]=\"{'conditionalExpression':(x,y) => x.age >= 25 }\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Phone Number' then you need to add 'Age' field greater than or equal to '25'.<br/></small>\r\n      <small class=\"form-text text-muted\">If you want to apply conditional expression of type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.phoneNumber?.errors\">{{userForm.controls.phoneNumber?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  digit,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\tage: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\tfaxNumber: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tphoneNumber: number;\r\n\r\n}\r\n","Json":null},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-digit-message-template-driven',\r\n    templateUrl: './digit-message.component.html'\r\n})\r\nexport class DigitMessageTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Mobile Number</label>\r\n      <input type=\"text\" name=\"mobileNumber\" [(ngModel)]=\"user.mobileNumber\"  class=\"form-control\"  [digit]=\"{'message':'Please enter only digit.'}\" />\r\n      <small class=\"form-text text-muted\">Shows custom message<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.mobileNumber?.errors\">{{userForm.controls.mobileNumber?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  digit,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\tmobileNumber: number;\r\n\r\n}\r\n","Json":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-digit-add-template-driven',\r\n    templateUrl: './digit-add.component.html'\r\n})\r\nexport class DigitAddTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Age</label>\r\n      <input type=\"text\" name=\"age\" [(ngModel)]=\"user.age\"  class=\"form-control\"  digit />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.age?.errors\">{{userForm.controls.age?.errors.digit.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  digit,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\tage: number;\r\n\r\n}\r\n","Json":null}}