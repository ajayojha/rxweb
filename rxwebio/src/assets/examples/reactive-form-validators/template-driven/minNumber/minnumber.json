{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-complete-template-driven',\r\n    templateUrl: './min-number-complete.component.html'\r\n})\r\nexport class MinNumberCompleteTemplateDrivenComponent implements OnInit {\r\n    resultinfo: ResultInfo\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.resultinfo= new ResultInfo()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #resultinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" name=\"maths\" [(ngModel)]=\"resultinfo.maths\"  class=\"form-control\"  [minNumber]=\"{'value':35}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' or 'Statstics', then you need to add 'Maths' input as '50'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls.maths?.errors\">{{resultinfoForm.controls.maths?.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Science</label>\r\n      <input type=\"text\" name=\"science\" [(ngModel)]=\"resultinfo.science\"  class=\"form-control\"  [minNumber]=\"{'value':35,'message':'Number should not be less than 35'}\" />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls.science?.errors\">{{resultinfoForm.controls.science?.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>English</label>\r\n      <input type=\"text\" name=\"english\" [(ngModel)]=\"resultinfo.english\"  class=\"form-control\"  [minNumber]=\"{'value':35,'conditionalExpression':(x,y) => x.maths == 50 }\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' then you need to add 'Maths' input as '50'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls.english?.errors\">{{resultinfoForm.controls.english?.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Statstics</label>\r\n      <input type=\"text\" name=\"statstics\" [(ngModel)]=\"resultinfo.statstics\"  class=\"form-control\"  [minNumber]=\"{'value':35,'conditionalExpression':'x => x.maths == 50'}\" />\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Maths' field have value of '50'<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls.statstics?.errors\">{{resultinfoForm.controls.statstics?.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  minNumber,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\tmaths: number;\r\n\r\n\tscience: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tenglish: number;\r\n\r\n\tstatstics: number;\r\n\r\n}\r\n","Json":null},"value":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-value-template-driven',\r\n    templateUrl: './min-number-value.component.html'\r\n})\r\nexport class MinNumberValueTemplateDrivenComponent implements OnInit {\r\n    resultinfo: ResultInfo\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.resultinfo= new ResultInfo()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #resultinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" name=\"maths\" [(ngModel)]=\"resultinfo.maths\"  class=\"form-control\"  [minNumber]=\"{'value':35}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' or 'Statstics', then you need to add 'Maths' input as '50'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls.maths?.errors\">{{resultinfoForm.controls.maths?.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  minNumber,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\tmaths: number;\r\n\r\n}\r\n","Json":null},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-message-template-driven',\r\n    templateUrl: './min-number-message.component.html'\r\n})\r\nexport class MinNumberMessageTemplateDrivenComponent implements OnInit {\r\n    resultinfo: ResultInfo\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.resultinfo= new ResultInfo()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #resultinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Science</label>\r\n      <input type=\"text\" name=\"science\" [(ngModel)]=\"resultinfo.science\"  class=\"form-control\"  [minNumber]=\"{'value':35,'message':'Number should not be less than 35'}\" />\r\n      <small class=\"form-text text-muted\">Shows Custom Validation Message<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls.science?.errors\">{{resultinfoForm.controls.science?.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  minNumber,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\tscience: number;\r\n\r\n}\r\n","Json":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-conditionalExpression-template-driven',\r\n    templateUrl: './min-number-conditional-expression.component.html'\r\n})\r\nexport class MinNumberConditionalExpressionTemplateDrivenComponent implements OnInit {\r\n    resultinfo: ResultInfo\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.resultinfo= new ResultInfo()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #resultinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" name=\"maths\" [(ngModel)]=\"resultinfo.maths\"  class=\"form-control\"  [minNumber]=\"{'value':35}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' or 'Statstics', then you need to add 'Maths' input as '50'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls.maths?.errors\">{{resultinfoForm.controls.maths?.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Statstics</label>\r\n      <input type=\"text\" name=\"statstics\" [(ngModel)]=\"resultinfo.statstics\"  class=\"form-control\"  [minNumber]=\"{'value':35,'conditionalExpression':'x => x.maths == 50'}\" />\r\n      <small class=\"form-text text-muted\">Conditional validation will be applied if the 'Maths' field have value of '50'<br/></small>\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls.statstics?.errors\">{{resultinfoForm.controls.statstics?.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>English</label>\r\n      <input type=\"text\" name=\"english\" [(ngModel)]=\"resultinfo.english\"  class=\"form-control\"  [minNumber]=\"{'value':35,'conditionalExpression':(x,y) => x.maths == 50 }\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'English' then you need to add 'Maths' input as '50'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls.english?.errors\">{{resultinfoForm.controls.english?.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  minNumber,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\tmaths: number;\r\n\r\n\tstatstics: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tenglish: number;\r\n\r\n}\r\n","Json":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { ResultInfo } from './result-info.model';\r\n\r\n@Component({\r\n    selector: 'app-minNumber-add-template-driven',\r\n    templateUrl: './min-number-add.component.html'\r\n})\r\nexport class MinNumberAddTemplateDrivenComponent implements OnInit {\r\n    resultinfo: ResultInfo\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.resultinfo= new ResultInfo()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #resultinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Maths</label>\r\n      <input type=\"text\" name=\"maths\" [(ngModel)]=\"resultinfo.maths\"  class=\"form-control\"  [minNumber]=\"{'value':35}\" />\r\n      <small class=\"form-text text-muted\">you can enter min number upto 35<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"resultinfoForm.controls.maths?.errors\">{{resultinfoForm.controls.maths?.errors.minNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!resultinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  minNumber,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class ResultInfo {\r\n\r\n\tmaths: number;\r\n\r\n}\r\n","Json":null}}