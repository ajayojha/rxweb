{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumber-complete-template-driven',\r\n    templateUrl: './max-number-complete.component.html'\r\n})\r\nexport class MaxNumberCompleteTemplateDrivenComponent implements OnInit {\r\n    subjectdetails: SubjectDetails\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.subjectdetails= new SubjectDetails()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #subjectdetailsForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Subject Code</label>\r\n      <input type=\"text\" name=\"subjectCode\" [(ngModel)]=\"subjectdetails.subjectCode\"  class=\"form-control\"  maxNumber />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Maximum Marks' or 'Obtained Marks', then you need to add 'Type' input as '8CS5A'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls.subjectCode?.errors\">{{subjectdetailsForm.controls.subjectCode?.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maximum Marks for above subject code</label>\r\n      <input type=\"text\" name=\"maximumMarks\" [(ngModel)]=\"subjectdetails.maximumMarks\"  class=\"form-control\"  [maxNumber]=\"{'value':100,'conditionalExpression':(x,y) => x.subjectCode == '8CS5A' }\" />\r\n      <small class=\"form-text text-muted\">To apply the validation of Max Number on 'Maximum Marks' field, then enter the value '8CS5A' in 'Subject Code' textbox and you can enter maxNumber upto 100<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls.maximumMarks?.errors\">{{subjectdetailsForm.controls.maximumMarks?.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Obtained Marks for above subject code</label>\r\n      <input type=\"text\" name=\"obtainedMarks\" [(ngModel)]=\"subjectdetails.obtainedMarks\"  class=\"form-control\"  [maxNumber]=\"{'value':100,'conditionalExpression':'x => x.subjectCode == '8CS5A''}\" />\r\n      <small class=\"form-text text-muted\">To apply the validation of Max Number on 'Obtained Marks' field, then enter the value '8CS5A' in 'Subject Code' textbox and you can enter maxNumber upto 100<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls.obtainedMarks?.errors\">{{subjectdetailsForm.controls.obtainedMarks?.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" name=\"passingMarks\" [(ngModel)]=\"subjectdetails.passingMarks\"  class=\"form-control\"  [maxNumber]=\"{'value':50,'message':'{{0}} exceeds the Maximum marks Limit'}\" />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls.passingMarks?.errors\">{{subjectdetailsForm.controls.passingMarks?.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectdetailsForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  maxNumber,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class SubjectDetails {\r\n\r\n\tsubjectCode: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tmaximumMarks: number;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\tobtainedMarks: number;\r\n\r\n\tpassingMarks: number;\r\n\r\n}\r\n","Json":null},"value":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumber-value-template-driven',\r\n    templateUrl: './max-number-value.component.html'\r\n})\r\nexport class MaxNumberValueTemplateDrivenComponent implements OnInit {\r\n    subjectdetails: SubjectDetails\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.subjectdetails= new SubjectDetails()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #subjectdetailsForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Subject Code</label>\r\n      <input type=\"text\" name=\"subjectCode\" [(ngModel)]=\"subjectdetails.subjectCode\"  class=\"form-control\"  maxNumber />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Maximum Marks' or 'Obtained Marks', then you need to add 'Type' input as '8CS5A'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls.subjectCode?.errors\">{{subjectdetailsForm.controls.subjectCode?.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Obtained Marks for above subject code</label>\r\n      <input type=\"text\" name=\"obtainedMarks\" [(ngModel)]=\"subjectdetails.obtainedMarks\"  class=\"form-control\"  [maxNumber]=\"{'value':100,'conditionalExpression':'x => x.subjectCode == '8CS5A''}\" />\r\n      <small class=\"form-text text-muted\">To apply the validation of Max Number on 'Obtained Marks' field, then enter the value '8CS5A' in 'Subject Code' textbox and you can enter maxNumber upto 100<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls.obtainedMarks?.errors\">{{subjectdetailsForm.controls.obtainedMarks?.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maximum Marks for above subject code</label>\r\n      <input type=\"text\" name=\"maximumMarks\" [(ngModel)]=\"subjectdetails.maximumMarks\"  class=\"form-control\"  [maxNumber]=\"{'value':100,'conditionalExpression':(x,y) => x.subjectCode == '8CS5A' }\" />\r\n      <small class=\"form-text text-muted\">To apply the validation of Max Number on 'Maximum Marks' field, then enter the value '8CS5A' in 'Subject Code' textbox and you can enter maxNumber upto 100<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls.maximumMarks?.errors\">{{subjectdetailsForm.controls.maximumMarks?.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectdetailsForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  maxNumber,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class SubjectDetails {\r\n\r\n\tsubjectCode: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\tobtainedMarks: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tmaximumMarks: number;\r\n\r\n}\r\n","Json":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumber-conditionalExpression-template-driven',\r\n    templateUrl: './max-number-conditional-expression.component.html'\r\n})\r\nexport class MaxNumberConditionalExpressionTemplateDrivenComponent implements OnInit {\r\n    subjectdetails: SubjectDetails\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.subjectdetails= new SubjectDetails()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #subjectdetailsForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Subject Code</label>\r\n      <input type=\"text\" name=\"subjectCode\" [(ngModel)]=\"subjectdetails.subjectCode\"  class=\"form-control\"  maxNumber />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Maximum Marks' or 'Obtained Marks', then you need to add 'Type' input as '8CS5A'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls.subjectCode?.errors\">{{subjectdetailsForm.controls.subjectCode?.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Obtained Marks for above subject code</label>\r\n      <input type=\"text\" name=\"obtainedMarks\" [(ngModel)]=\"subjectdetails.obtainedMarks\"  class=\"form-control\"  [maxNumber]=\"{'value':100,'conditionalExpression':'x => x.subjectCode == '8CS5A''}\" />\r\n      <small class=\"form-text text-muted\">To apply the validation of Max Number on 'Obtained Marks' field, then enter the value '8CS5A' in 'Subject Code' textbox and you can enter maxNumber upto 100<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls.obtainedMarks?.errors\">{{subjectdetailsForm.controls.obtainedMarks?.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Maximum Marks for above subject code</label>\r\n      <input type=\"text\" name=\"maximumMarks\" [(ngModel)]=\"subjectdetails.maximumMarks\"  class=\"form-control\"  [maxNumber]=\"{'value':100,'conditionalExpression':(x,y) => x.subjectCode == '8CS5A' }\" />\r\n      <small class=\"form-text text-muted\">To apply the validation of Max Number on 'Maximum Marks' field, then enter the value '8CS5A' in 'Subject Code' textbox and you can enter maxNumber upto 100<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls.maximumMarks?.errors\">{{subjectdetailsForm.controls.maximumMarks?.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectdetailsForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  maxNumber,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class SubjectDetails {\r\n\r\n\tsubjectCode: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\tobtainedMarks: number;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tmaximumMarks: number;\r\n\r\n}\r\n","Json":null},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumber-message-template-driven',\r\n    templateUrl: './max-number-message.component.html'\r\n})\r\nexport class MaxNumberMessageTemplateDrivenComponent implements OnInit {\r\n    subjectdetails: SubjectDetails\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.subjectdetails= new SubjectDetails()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #subjectdetailsForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" name=\"passingMarks\" [(ngModel)]=\"subjectdetails.passingMarks\"  class=\"form-control\"  [maxNumber]=\"{'value':50,'message':'{{0}} exceeds the Maximum marks Limit'}\" />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls.passingMarks?.errors\">{{subjectdetailsForm.controls.passingMarks?.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectdetailsForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  maxNumber,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class SubjectDetails {\r\n\r\n\tpassingMarks: number;\r\n\r\n}\r\n","Json":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { SubjectDetails } from './subject-details.model';\r\n\r\n@Component({\r\n    selector: 'app-maxNumber-add-template-driven',\r\n    templateUrl: './max-number-add.component.html'\r\n})\r\nexport class MaxNumberAddTemplateDrivenComponent implements OnInit {\r\n    subjectdetails: SubjectDetails\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.subjectdetails= new SubjectDetails()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #subjectdetailsForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Passing Marks</label>\r\n      <input type=\"text\" name=\"passingMarks\" [(ngModel)]=\"subjectdetails.passingMarks\"  class=\"form-control\"  [maxNumber]=\"{'value':50}\" />\r\n      <small class=\"form-text text-muted\">you can enter MaxNumber upto 50<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"subjectdetailsForm.controls.passingMarks?.errors\">{{subjectdetailsForm.controls.passingMarks?.errors.maxNumber.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!subjectdetailsForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  maxNumber,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class SubjectDetails {\r\n\r\n\tpassingMarks: number;\r\n\r\n}\r\n","Json":null}}