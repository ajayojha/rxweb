{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component({\r\n    selector: 'app-latitude-complete-template-driven',\r\n    templateUrl: './latitude-complete.component.html'\r\n})\r\nexport class LatitudeCompleteTemplateDrivenComponent implements OnInit {\r\n    country: Country\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.country= new Country()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #countryForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label> Continent</label>\r\n      <input type=\"text\" name=\"continent\" [(ngModel)]=\"country.continent\"  class=\"form-control\"  latitude />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Latitude' or 'Third Country Latitude', then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.continent?.errors\">{{countryForm.controls.continent?.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Second Country Latitude</label>\r\n      <input type=\"text\" name=\"secondCountryLatitude\" [(ngModel)]=\"country.secondCountryLatitude\"  class=\"form-control\"  [latitude]=\"{'conditionalExpression':(x,y) => x.continent == 'Asia' }\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Latitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.secondCountryLatitude?.errors\">{{countryForm.controls.secondCountryLatitude?.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Country Latitude</label>\r\n      <input type=\"text\" name=\"thirdCountryLatitude\" [(ngModel)]=\"country.thirdCountryLatitude\"  class=\"form-control\"  [latitude]=\"{'conditionalExpression':'x => x.continent =='Asia''}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country Latitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.thirdCountryLatitude?.errors\">{{countryForm.controls.thirdCountryLatitude?.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>First Country Latitude</label>\r\n      <input type=\"text\" name=\"firstCountryLatitude\" [(ngModel)]=\"country.firstCountryLatitude\"  class=\"form-control\"  [latitude]=\"{'message':'{{0}} is not a latitude'}\" />\r\n      <small class=\"form-text text-muted\">You can enter only latitude<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.firstCountryLatitude?.errors\">{{countryForm.controls.firstCountryLatitude?.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!countryForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  latitude,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Country {\r\n\r\n\tcontinent: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tsecondCountryLatitude: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\tthirdCountryLatitude: string;\r\n\r\n\tfirstCountryLatitude: string;\r\n\r\n}\r\n","Json":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component({\r\n    selector: 'app-latitude-conditionalExpression-template-driven',\r\n    templateUrl: './latitude-conditional-expression.component.html'\r\n})\r\nexport class LatitudeConditionalExpressionTemplateDrivenComponent implements OnInit {\r\n    country: Country\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.country= new Country()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #countryForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label> Continent</label>\r\n      <input type=\"text\" name=\"continent\" [(ngModel)]=\"country.continent\"  class=\"form-control\"  latitude />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Latitude' or 'Third Country Latitude', then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.continent?.errors\">{{countryForm.controls.continent?.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Third Country Latitude</label>\r\n      <input type=\"text\" name=\"thirdCountryLatitude\" [(ngModel)]=\"country.thirdCountryLatitude\"  class=\"form-control\"  [latitude]=\"{'conditionalExpression':'x => x.continent =='Asia''}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Third Country Latitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.thirdCountryLatitude?.errors\">{{countryForm.controls.thirdCountryLatitude?.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Second Country Latitude</label>\r\n      <input type=\"text\" name=\"secondCountryLatitude\" [(ngModel)]=\"country.secondCountryLatitude\"  class=\"form-control\"  [latitude]=\"{'conditionalExpression':(x,y) => x.continent == 'Asia' }\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Second Country Latitude' then you need to add 'Continent' input as 'Asia'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.secondCountryLatitude?.errors\">{{countryForm.controls.secondCountryLatitude?.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!countryForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  latitude,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Country {\r\n\r\n\tcontinent: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\tthirdCountryLatitude: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tsecondCountryLatitude: string;\r\n\r\n}\r\n","Json":null},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Country } from './country.model';\r\n\r\n@Component({\r\n    selector: 'app-latitude-message-template-driven',\r\n    templateUrl: './latitude-message.component.html'\r\n})\r\nexport class LatitudeMessageTemplateDrivenComponent implements OnInit {\r\n    country: Country\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.country= new Country()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #countryForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>First Country Latitude</label>\r\n      <input type=\"text\" name=\"firstCountryLatitude\" [(ngModel)]=\"country.firstCountryLatitude\"  class=\"form-control\"  [latitude]=\"{'message':'{{0}} is not a latitude'}\" />\r\n      <small class=\"form-text text-muted\">You can enter only latitude<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"countryForm.controls.firstCountryLatitude?.errors\">{{countryForm.controls.firstCountryLatitude?.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!countryForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  latitude,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Country {\r\n\r\n\tfirstCountryLatitude: string;\r\n\r\n}\r\n","Json":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { NumberInfo } from './number-info.model';\r\n\r\n@Component({\r\n    selector: 'app-latitude-add-template-driven',\r\n    templateUrl: './latitude-add.component.html'\r\n})\r\nexport class LatitudeAddTemplateDrivenComponent implements OnInit {\r\n    numberinfo: NumberInfo\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.numberinfo= new NumberInfo()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #numberinfoForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>First Country Latitude</label>\r\n      <input type=\"text\" name=\"firstCountryLatitude\" [(ngModel)]=\"numberinfo.firstCountryLatitude\"  class=\"form-control\"  latitude />\r\n      <small class=\"form-text text-muted\">You must enter a valid latitude<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"numberinfoForm.controls.firstCountryLatitude?.errors\">{{numberinfoForm.controls.firstCountryLatitude?.errors.latitude.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!numberinfoForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  latitude,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class NumberInfo {\r\n\r\n\tfirstCountryLatitude: string;\r\n\r\n}\r\n","Json":null}}