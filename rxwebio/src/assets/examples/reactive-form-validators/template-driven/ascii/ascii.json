{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ascii-complete-template-driven',\r\n    templateUrl: './ascii-complete.component.html'\r\n})\r\nexport class AsciiCompleteTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Language</label>\r\n      <input type=\"text\" name=\"language\" [(ngModel)]=\"user.language\"  class=\"form-control\"  ascii />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Number Ascii Code' or 'Alphabet Ascii Code', then you need to add 'Language' input as 'Java'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.language?.errors\">{{userForm.controls.language?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Number Ascii Code</label>\r\n      <input type=\"text\" name=\"numberAsciiCode\" [(ngModel)]=\"user.numberAsciiCode\"  class=\"form-control\"  [ascii]=\"{'conditionalExpression':(x,y) => x.language == 'Java' }\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Number Ascii Code' then you need to add 'Language' input as 'Java'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.numberAsciiCode?.errors\">{{userForm.controls.numberAsciiCode?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Alphabet Ascii Code</label>\r\n      <input type=\"text\" name=\"alphabetAsciiCode\" [(ngModel)]=\"user.alphabetAsciiCode\"  class=\"form-control\"  [ascii]=\"{'conditionalExpression':'x => x.language =='Java''}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Alphabet Ascii Code' then you need to add 'Language' input as 'Java'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.alphabetAsciiCode?.errors\">{{userForm.controls.alphabetAsciiCode?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Special Character Ascii Code</label>\r\n      <input type=\"text\" name=\"specialCharAsciiCode\" [(ngModel)]=\"user.specialCharAsciiCode\"  class=\"form-control\"  [ascii]=\"{'message':'{{0}} is not an Ascii Code'}\" />\r\n      <small class=\"form-text text-muted\">enter Ascii Code only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.specialCharAsciiCode?.errors\">{{userForm.controls.specialCharAsciiCode?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  ascii,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\tlanguage: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tnumberAsciiCode: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\talphabetAsciiCode: string;\r\n\r\n\tspecialCharAsciiCode: string;\r\n\r\n}\r\n","Json":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ascii-conditionalExpression-template-driven',\r\n    templateUrl: './ascii-conditional-expression.component.html'\r\n})\r\nexport class AsciiConditionalExpressionTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Language</label>\r\n      <input type=\"text\" name=\"language\" [(ngModel)]=\"user.language\"  class=\"form-control\"  ascii />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Number Ascii Code' or 'Alphabet Ascii Code', then you need to add 'Language' input as 'Java'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.language?.errors\">{{userForm.controls.language?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Alphabet Ascii Code</label>\r\n      <input type=\"text\" name=\"alphabetAsciiCode\" [(ngModel)]=\"user.alphabetAsciiCode\"  class=\"form-control\"  [ascii]=\"{'conditionalExpression':'x => x.language =='Java''}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Alphabet Ascii Code' then you need to add 'Language' input as 'Java'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.alphabetAsciiCode?.errors\">{{userForm.controls.alphabetAsciiCode?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Number Ascii Code</label>\r\n      <input type=\"text\" name=\"numberAsciiCode\" [(ngModel)]=\"user.numberAsciiCode\"  class=\"form-control\"  [ascii]=\"{'conditionalExpression':(x,y) => x.language == 'Java' }\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'Number Ascii Code' then you need to add 'Language' input as 'Java'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.numberAsciiCode?.errors\">{{userForm.controls.numberAsciiCode?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  ascii,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\tlanguage: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\talphabetAsciiCode: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tnumberAsciiCode: string;\r\n\r\n}\r\n","Json":null},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ascii-message-template-driven',\r\n    templateUrl: './ascii-message.component.html'\r\n})\r\nexport class AsciiMessageTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Special Character Ascii Code</label>\r\n      <input type=\"text\" name=\"specialCharAsciiCode\" [(ngModel)]=\"user.specialCharAsciiCode\"  class=\"form-control\"  [ascii]=\"{'message':'{{0}} is not an Ascii Code'}\" />\r\n      <small class=\"form-text text-muted\">enter Ascii Code only<br/></small>\r\n      <small class=\"form-text text-muted\">Shows custom message.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.specialCharAsciiCode?.errors\">{{userForm.controls.specialCharAsciiCode?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  ascii,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\tspecialCharAsciiCode: string;\r\n\r\n}\r\n","Json":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { User } from './user.model';\r\n\r\n@Component({\r\n    selector: 'app-ascii-add-template-driven',\r\n    templateUrl: './ascii-add.component.html'\r\n})\r\nexport class AsciiAddTemplateDrivenComponent implements OnInit {\r\n    user: User\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.user= new User()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #userForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Special Character Ascii Code</label>\r\n      <input type=\"text\" name=\"specialCharAsciiCode\" [(ngModel)]=\"user.specialCharAsciiCode\"  class=\"form-control\"  ascii />\r\n      <small class=\"form-text text-muted\">You must enter an Ascii Code only<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"userForm.controls.specialCharAsciiCode?.errors\">{{userForm.controls.specialCharAsciiCode?.errors.ascii.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!userForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  ascii,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class User {\r\n\r\n\tspecialCharAsciiCode: string;\r\n\r\n}\r\n","Json":null}}