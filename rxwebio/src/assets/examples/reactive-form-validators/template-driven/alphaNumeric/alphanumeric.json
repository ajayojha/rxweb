{"complete":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumeric-complete-template-driven',\r\n    templateUrl: './alpha-numeric-complete.component.html'\r\n})\r\nexport class AlphaNumericCompleteTemplateDrivenComponent implements OnInit {\r\n    location: Location\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #locationForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Area Name</label>\r\n      <input type=\"text\" name=\"areaName\" [(ngModel)]=\"location.areaName\"  class=\"form-control\"  alphaNumeric />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'City Code'  or 'Country Code' then you need to add this input as 'Delhi'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.areaName?.errors\">{{locationForm.controls.areaName?.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Flat Address</label>\r\n      <input type=\"text\" name=\"flatAddress\" [(ngModel)]=\"location.flatAddress\"  class=\"form-control\"  [alphaNumeric]=\"{'allowWhiteSpace':true}\" />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.flatAddress?.errors\">{{locationForm.controls.flatAddress?.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Postal Address</label>\r\n      <input type=\"text\" name=\"postalAddress\" [(ngModel)]=\"location.postalAddress\"  class=\"form-control\"  [alphaNumeric]=\"{'allowWhiteSpace':true,'message':'Please enter only alphanumerics, special characters are not allowed and whitespace is allowed.'}\" />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.postalAddress?.errors\">{{locationForm.controls.postalAddress?.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Country Code</label>\r\n      <input type=\"text\" name=\"countryCode\" [(ngModel)]=\"location.countryCode\"  class=\"form-control\"  [alphaNumeric]=\"{'conditionalExpression':(x,y) => x.areaName == 'Delhi' }\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on this field then you need to add 'areaName' input as 'Delhi'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.countryCode?.errors\">{{locationForm.controls.countryCode?.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>City Code</label>\r\n      <input type=\"text\" name=\"cityCode\" [(ngModel)]=\"location.cityCode\"  class=\"form-control\"  [alphaNumeric]=\"{'conditionalExpression':'x => x.areaName =='Delhi''}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on this field then you need to add 'areaName' input as 'Delhi'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.cityCode?.errors\">{{locationForm.controls.cityCode?.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  alphaNumeric,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\tareaName: string;\r\n\r\n\tflatAddress: string;\r\n\r\n\tpostalAddress: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tcountryCode: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\tcityCode: string;\r\n\r\n}\r\n","Json":null},"allowWhiteSpace":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumeric-allowWhiteSpace-template-driven',\r\n    templateUrl: './alpha-numeric-allow-white-space.component.html'\r\n})\r\nexport class AlphaNumericAllowWhiteSpaceTemplateDrivenComponent implements OnInit {\r\n    location: Location\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #locationForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Flat Address</label>\r\n      <input type=\"text\" name=\"flatAddress\" [(ngModel)]=\"location.flatAddress\"  class=\"form-control\"  [alphaNumeric]=\"{'allowWhiteSpace':true}\" />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.flatAddress?.errors\">{{locationForm.controls.flatAddress?.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  alphaNumeric,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\tflatAddress: string;\r\n\r\n}\r\n","Json":null},"message":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumeric-message-template-driven',\r\n    templateUrl: './alpha-numeric-message.component.html'\r\n})\r\nexport class AlphaNumericMessageTemplateDrivenComponent implements OnInit {\r\n    location: Location\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #locationForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Postal Address</label>\r\n      <input type=\"text\" name=\"postalAddress\" [(ngModel)]=\"location.postalAddress\"  class=\"form-control\"  [alphaNumeric]=\"{'allowWhiteSpace':true,'message':'Please enter only alphanumerics, special characters are not allowed and whitespace is allowed.'}\" />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.postalAddress?.errors\">{{locationForm.controls.postalAddress?.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  alphaNumeric,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\tpostalAddress: string;\r\n\r\n}\r\n","Json":null},"conditionalExpression":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumeric-conditionalExpression-template-driven',\r\n    templateUrl: './alpha-numeric-conditional-expression.component.html'\r\n})\r\nexport class AlphaNumericConditionalExpressionTemplateDrivenComponent implements OnInit {\r\n    location: Location\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #locationForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Area Name</label>\r\n      <input type=\"text\" name=\"areaName\" [(ngModel)]=\"location.areaName\"  class=\"form-control\"  alphaNumeric />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on 'City Code'  or 'Country Code' then you need to add this input as 'Delhi'.<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.areaName?.errors\">{{locationForm.controls.areaName?.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>City Code</label>\r\n      <input type=\"text\" name=\"cityCode\" [(ngModel)]=\"location.cityCode\"  class=\"form-control\"  [alphaNumeric]=\"{'conditionalExpression':'x => x.areaName =='Delhi''}\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on this field then you need to add 'areaName' input as 'Delhi'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'string'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.cityCode?.errors\">{{locationForm.controls.cityCode?.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <div class=\"form-group\">\r\n      <label>Country Code</label>\r\n      <input type=\"text\" name=\"countryCode\" [(ngModel)]=\"location.countryCode\"  class=\"form-control\"  [alphaNumeric]=\"{'conditionalExpression':(x,y) => x.areaName == 'Delhi' }\" />\r\n      <small class=\"form-text text-muted\">If you want to apply conditional validation on this field then you need to add 'areaName' input as 'Delhi'.<br/></small>\r\n      <small class=\"form-text text-muted\">Conditional Expression with type 'function'<br/></small>\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.countryCode?.errors\">{{locationForm.controls.countryCode?.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  alphaNumeric,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\tareaName: string;\r\n\r\n\t//If you want to apply conditional expression of type 'string'\r\n\tcityCode: string;\r\n\r\n\t//If you want to apply conditional expression of type 'function'\r\n\tcountryCode: string;\r\n\r\n}\r\n","Json":null},"add":{"Notes":[],"Component":"import { Component, OnInit } from '@angular/core';\r\nimport { FormGroup,Validators } from \"@angular/forms\"\r\nimport { Location } from './location.model';\r\n\r\n@Component({\r\n    selector: 'app-alphaNumeric-add-template-driven',\r\n    templateUrl: './alpha-numeric-add.component.html'\r\n})\r\nexport class AlphaNumericAddTemplateDrivenComponent implements OnInit {\r\n    location: Location\r\n\r\n    constructor(\r\n    ) { }\r\n\r\n    ngOnInit() {\r\n       this.location= new Location()\r\n    }\r\n}\r\n","Html":"<div>\r\n  <form #locationForm = \"ngForm\">\r\n    <div class=\"form-group\">\r\n      <label>Area Name</label>\r\n      <input type=\"text\" name=\"areaName\" [(ngModel)]=\"location.areaName\"  class=\"form-control\"  alphaNumeric />\r\n\t <small class=\"form-text text-danger\" *ngIf=\"locationForm.controls.areaName?.errors\">{{locationForm.controls.areaName?.errors.alphaNumeric.message}}<br/></small>\t\r\n    </div>\r\n    <button [disabled]=\"!locationForm.valid\" class=\"btn btn-primary\">Submit</button>\r\n  </form>\r\n</div>\r\n","Model":"import {  alphaNumeric,prop, } from \"@rxweb/reactive-form-validators\"\r\n\r\nexport class Location {\r\n\r\n\tareaName: string;\r\n\r\n}\r\n","Json":null}}